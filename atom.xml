<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>源来承续缘</title>
  
  <subtitle>A developer in limbo.</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://cn.abnerchou.me/"/>
  <updated>2019-11-09T19:24:13.851Z</updated>
  <id>https://cn.abnerchou.me/</id>
  
  <author>
    <name>琼梧</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>博客搬迁</title>
    <link href="https://cn.abnerchou.me/blog/96f8d899/"/>
    <id>https://cn.abnerchou.me/blog/96f8d899/</id>
    <published>2016-12-20T09:16:47.000Z</published>
    <updated>2019-11-09T19:24:13.851Z</updated>
    
    <content type="html"><![CDATA[<p>本博客已迁移至 <a href="http://legofan.cc" target="_blank" rel="noopener">legofan.cc</a>, 详细迁移过程请参看<a href="http://legofan.cc/new-blog-new-feel-new-year/" target="_blank" rel="noopener">新博</a>。</p><p>本博仍欢迎留言评论，所有联系方式不变。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;本博客已迁移至 &lt;a href=&quot;http://legofan.cc&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;legofan.cc&lt;/a&gt;, 详细迁移过程请参看&lt;a href=&quot;http://legofan.cc/new-blog-new-feel-
      
    
    </summary>
    
      <category term="杂谈" scheme="https://cn.abnerchou.me/categories/%E6%9D%82%E8%B0%88/"/>
    
    
      <category term="博客" scheme="https://cn.abnerchou.me/tags/%E5%8D%9A%E5%AE%A2/"/>
    
      <category term="legofan" scheme="https://cn.abnerchou.me/tags/legofan/"/>
    
  </entry>
  
  <entry>
    <title>在围棋新人吧的一年</title>
    <link href="https://cn.abnerchou.me/blog/903c7941/"/>
    <id>https://cn.abnerchou.me/blog/903c7941/</id>
    <published>2016-12-07T16:51:37.000Z</published>
    <updated>2019-11-09T19:24:13.851Z</updated>
    
    <content type="html"><![CDATA[<img src="/img/xinrenba.jpg" title="围棋新人吧"><p>2013-2014 年间，出于对围棋的热爱，加入了围棋新人吧。当时正出于贴吧飞速发展的时代（现在增速不清楚），像D吧这种大吧，每天新增帖子数以万计。围棋新人吧也借着当时的势头，在一年内会员数从20增长到1000+，日发帖量从不足10到100+。</p><p>在贴吧上网名叫 琼蕊耹曌，这也是 琼梧 的原型。由于本人姓名中有太阳有星辰，唯独缺月亮，所以就对“琼”字情有独钟。当然这是题外话。</p><p>在贴吧还不到百人的时候加入（具体记不清了），也算是开吧元老，并且阴差阳错的成为吧主。当时的贴吧本身就是个吧友会，氛围其乐融融，堪称围棋吧的世外桃源。顺带一提，在2013年3-5月围棋吧“吧闹”事件中，围新吧意外受益，贴吧会员激增。使得围新吧成为围棋吧以外最大的围棋贴吧。</p><p>本人在职时，主要职能就是删广告和发围棋入门的帖子。期间也组织过不少围棋比赛，规模最大的当属“萌圣战”。倒不是因为参加人数多，而是投入的精力。我不仅赞助了比赛，甚至为此还制作了海报：</p><img src="/img/xinrenba-5.jpg" title="萌圣战"><p>可以看出，当时投入了相当多的时间在围新吧。2014年初由于临近毕业，也就渐渐淡出贴吧了。而且百度贴吧开始在帖子中间插入广告，极大的影响用户体验。更重要的是当时围新吧中的小伙伴们也都渐渐的离开了，为了学业，为了事业。</p><p>在多重因素的影响下，最后就彻底离开了围新吧，更准确的是离开了百度贴吧。</p><p>有欢乐，也有悲伤，在此别过那段记忆。</p><p>最近利用闲暇时间，将当时发在围新吧上的文章转至博客，看过往文字，感慨颇多，遂成此文。</p><p>文章列表如下：<br><a href="https://cn.abnerchou.me/tags/%E5%9B%B4%E6%A3%8B%E6%96%B0%E4%BA%BA%E5%90%A7/">围棋新人吧</a></p><p>~ 完 ~</p><p>以下是在围新吧使用过的签名图片：</p><img src="/img/xinrenba-1.gif" title="围棋新人吧"><img src="/img/xinrenba-2.gif" title="围棋新人吧"><img src="/img/xinrenba-3.gif" title="围棋新人吧"><img src="/img/xinrenba-4.jpg" title="围棋新人吧"><img src="/img/xinrenba-6.jpg" title="围棋新人吧">]]></content>
    
    <summary type="html">
    
      
      
        &lt;img src=&quot;/img/xinrenba.jpg&quot; title=&quot;围棋新人吧&quot;&gt;
&lt;p&gt;2013-2014 年间，出于对围棋的热爱，加入了围棋新人吧。当时正出于贴吧飞速发展的时代（现在增速不清楚），像D吧这种大吧，每天新增帖子数以万计。围棋新人吧也借着当时的势头，在一年内会
      
    
    </summary>
    
      <category term="评说" scheme="https://cn.abnerchou.me/categories/%E8%AF%84%E8%AF%B4/"/>
    
    
      <category term="围棋" scheme="https://cn.abnerchou.me/tags/%E5%9B%B4%E6%A3%8B/"/>
    
      <category term="围棋新人吧" scheme="https://cn.abnerchou.me/tags/%E5%9B%B4%E6%A3%8B%E6%96%B0%E4%BA%BA%E5%90%A7/"/>
    
      <category term="百度贴吧" scheme="https://cn.abnerchou.me/tags/%E7%99%BE%E5%BA%A6%E8%B4%B4%E5%90%A7/"/>
    
  </entry>
  
  <entry>
    <title>寻找於春景君</title>
    <link href="https://cn.abnerchou.me/blog/23ed47e2/"/>
    <id>https://cn.abnerchou.me/blog/23ed47e2/</id>
    <published>2016-11-21T20:55:43.000Z</published>
    <updated>2019-11-09T19:24:13.851Z</updated>
    
    <content type="html"><![CDATA[<h2 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h2><p>本文起因源自<a href="https://www.zhihu.com/question/21575367" target="_blank" rel="noopener">知乎</a>一问题：</p><blockquote><p><strong>《C++设计新思维》译者於春景何许人也？</strong></p><p>想不到2002年的深圳居然有翻译这种书的人，想必如果一直在做技术的话，现在也是国内C++界的权威了吧，为何网上居然一点信息都搜不到。</p></blockquote><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/billyu2.png" alt="寻人" title>                </div>                <div class="image-caption">寻人</div>            </figure><p>如今网络人肉盛行，此等名人竟然无人知晓，让人甚是惊讶。随便一谷歌，果真除了翻译的书以外，再无其它信息。在web2.0的时代，那个处处博客的年代，计算机达人没有个博客就跟如今名人没有微博一样。但於春景君却什么没有，我不太相信。</p><a id="more"></a><h2 id="真相只有一个"><a href="#真相只有一个" class="headerlink" title="真相只有一个"></a>真相只有一个</h2><p>第一线索当然是其的著作。</p><h3 id="侯捷"><a href="#侯捷" class="headerlink" title="侯捷"></a>侯捷</h3><p>第一个映入眼帘的本书的另一译者侯捷老师。侯捷老师的《深入浅出MFC》是当时Windows编程必备读物，真的是那种深入浅出，豁然开朗。在Google中搜索侯捷老师的网站来碰碰运气：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">於春景 site:jjhou.boolan.com</span><br></pre></td></tr></table></figure><p>除了合译《C++设计新思维》外，似乎并无交集。但当时能与侯捷老师合作，也必然是业内大牛了。而且侯捷老师译的《Exceptional C++》，於春景君译的《More Exceptional C++》，可见当时水平应该是不分伯仲。</p><p>简单直接的就给侯捷老师发信询问其联系方式。竟然得到了他的回复，甚是激动。然而他也有十多年未与於春景君有过联系了，甚是可惜，看来只能另寻出路了。</p><p>在侯捷老师网站也不是全无收获，另一个重要的线索就是<a href="http://jjhou.boolan.com/mcd-c-ch1-4.pdf" target="_blank" rel="noopener">《C++设计新思维》</a>中的序言。於春景君有留下一个邮箱：<a href="mailto:billyu@lostmouse.net" target="_blank" rel="noopener">billyu@lostmouse.net</a></p><h3 id="Bill-Yu"><a href="#Bill-Yu" class="headerlink" title="Bill Yu"></a>Bill Yu</h3><p>首先尝试连接lostmouse.net，发现是个未注册的域名。Bill Yu这个用户名应该是於春景君的英文名。于是再次拜托谷歌娘：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Bill Yu C++</span><br></pre></td></tr></table></figure><p>大部分是无关的信息，但无意间看到了《More Exceptional C++》原著的<a href="http://www.gotw.ca/publications/mxc++-errata.htm" target="_blank" rel="noopener">勘误表</a>，其中有Bill Yu的三条。译者提出勘误，合情合理，有理由相信此处的Bill Yu就是於春景君本人。于是又Get到一个新邮箱：<a href="mailto:nettedfish@yahoo.com" target="_blank" rel="noopener">nettedfish@yahoo.com</a></p><h3 id="Netted-Fish"><a href="#Netted-Fish" class="headerlink" title="Netted Fish"></a>Netted Fish</h3><p>Netted Fish应该是被网住的鱼，或者是被困的鱼。很特殊的名字，本以为一搜就能找到，但发现竟然是不少钓鱼网站（真的钓鱼）。</p><p>似乎寻找的线索就断掉了。反复思考之后，发现自己漏掉了一点，就是：lostmouse.net</p><h3 id="Lost-Mouse"><a href="#Lost-Mouse" class="headerlink" title="Lost Mouse"></a>Lost Mouse</h3><p>Lost Mouse 丢失的鼠标或者丢失的老鼠……</p><p>lostmouse.net虽然无法连接上，但这个域名并不是知名的邮件服务商。那么就有另一种可能，就是是个人域名。既然以前使用过，那一定有网络存档。到<a href="http://web.archive.org" target="_blank" rel="noopener">web.archive.org</a>一看，从2002-2011都有记录，但2004以后域名就无人使用了。以下图片是<a href="https://web.archive.org/web/20040924150742/http://www.lostmouse.net/" target="_blank" rel="noopener">2004年最后一次存档</a>：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/billyu1.png" alt="Bill" title>                </div>                <div class="image-caption">Bill</div>            </figure><p>如果想了解於春景君有多牛，可以点开其“我的程序生涯”感受一下。</p><h3 id="You"><a href="#You" class="headerlink" title="You"></a>You</h3><p>所有搜索到的，都是於春景君2006年之前的信息。然而在Delphi论坛里，有一用户<a href="http://home.delphihome.net/space-uid-27.html" target="_blank" rel="noopener">You</a>，曾在一<a href="http://delphihome.net/forum.php?mod=viewthread&amp;tid=88832" target="_blank" rel="noopener">帖子</a>中使用了<a href="mailto:nettedfish@yahoo.com" target="_blank" rel="noopener">nettedfish@yahoo.com</a>的邮箱，并且最近的动态是在2016九月份。结合Delphi语言的古老，有理由相信这个账号是於春景君仍然使用的网络账号。</p><p>在此稍微说明下什么是Delphi？Delphi是在Windows3.1时代诞生的用于编写Windows应用的IDE，支持C++和Pascal。在Visual Studio出来之前，Delphi基本算是唯一的IDE。</p><h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>本文就如《寻找周杰伦》一般，是对偶像过往的一次探寻，并且从侧面证明了：</p><blockquote><p>The Internet never forgets.</p></blockquote><p>在网络上的一切蛛丝马迹都会被记录着，只要有心去寻找，总是会被找到。</p><p>在寻找的过程中，也零零碎碎发现了於春景君的诸多网络足迹，似乎又回到了2000年初的网络时代。作为将国外技术引入中国的先锋，他翻译的图书不知道帮助多少辛辛学子走进计算机，走进编程。在此感谢他的工作。</p><p>高调是一种生活，低调也是一种生活。虽然不知道他现在身在何处，在做什么，但一定仍然从事着计算机相关的工作，仍为计算机领域做着贡献。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;起因&quot;&gt;&lt;a href=&quot;#起因&quot; class=&quot;headerlink&quot; title=&quot;起因&quot;&gt;&lt;/a&gt;起因&lt;/h2&gt;&lt;p&gt;本文起因源自&lt;a href=&quot;https://www.zhihu.com/question/21575367&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;知乎&lt;/a&gt;一问题：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;《C++设计新思维》译者於春景何许人也？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;想不到2002年的深圳居然有翻译这种书的人，想必如果一直在做技术的话，现在也是国内C++界的权威了吧，为何网上居然一点信息都搜不到。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;image-bubble&quot;&gt;
                &lt;div class=&quot;img-lightbox&quot;&gt;
                    &lt;div class=&quot;overlay&quot;&gt;&lt;/div&gt;
                    &lt;img src=&quot;/img/billyu2.png&quot; alt=&quot;寻人&quot; title&gt;
                &lt;/div&gt;
                &lt;div class=&quot;image-caption&quot;&gt;寻人&lt;/div&gt;
            &lt;/figure&gt;
&lt;p&gt;如今网络人肉盛行，此等名人竟然无人知晓，让人甚是惊讶。随便一谷歌，果真除了翻译的书以外，再无其它信息。在web2.0的时代，那个处处博客的年代，计算机达人没有个博客就跟如今名人没有微博一样。但於春景君却什么没有，我不太相信。&lt;/p&gt;
    
    </summary>
    
      <category term="杂谈" scheme="https://cn.abnerchou.me/categories/%E6%9D%82%E8%B0%88/"/>
    
    
      <category term="於春景" scheme="https://cn.abnerchou.me/tags/%E6%96%BC%E6%98%A5%E6%99%AF/"/>
    
      <category term="知乎" scheme="https://cn.abnerchou.me/tags/%E7%9F%A5%E4%B9%8E/"/>
    
      <category term="侯捷" scheme="https://cn.abnerchou.me/tags/%E4%BE%AF%E6%8D%B7/"/>
    
  </entry>
  
  <entry>
    <title>VPS服务器笔记</title>
    <link href="https://cn.abnerchou.me/blog/b796bb19/"/>
    <id>https://cn.abnerchou.me/blog/b796bb19/</id>
    <published>2016-11-02T20:30:32.000Z</published>
    <updated>2019-11-09T19:24:13.851Z</updated>
    
    <content type="html"><![CDATA[<p>自从上次<a href="http://cn.abnerchou.me/blog/88900ae9/">折腾完DNS</a>，CloudFlare总显示域名移除（解决方法就是删除DNSPod，等CloudFlare验证后再添加回来）。虽然不知道这些是不是因为自己折腾的过，但域名分放在不同的DNS和Host上，增加了管理的难度和复杂度。</p><p>于是研究了下VPS服务器，需要兼顾以下两点，国内外的访问速度以及无需备案。总结起来，最好的方案就是香港机房。但考虑到性价比，海外机房也是可以纳入选择范围。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/vps_1.jpg" alt="VPS" title>                </div>                <div class="image-caption">VPS</div>            </figure><h4 id="大名在外无需解释的服务商"><a href="#大名在外无需解释的服务商" class="headerlink" title="大名在外无需解释的服务商"></a>大名在外无需解释的服务商</h4><p><a href="https://cn.aliyun.com/" target="_blank" rel="noopener">阿里云</a>，<a href="https://www.qcloud.com/" target="_blank" rel="noopener">腾讯云</a>，以及国内一众VPS服务商。国内访问速度肯定没得说，但域名备案是一个相当头痛的事，而且阿里云的备案不能用在腾讯云的服务器上，切换服务商需要重新备案。备案将主机与域名绑定，使选择服务商上面失去了相当大的自由度。虽然支持多地备案，但根据<a href="http://bbs.qcloud.com/thread-9889-1-1.html" target="_blank" rel="noopener">此处回复</a>，顶级域名只能在注册服务商处使用，次级域名不限。</p><p>但如果面向群体是国内用户，使用国内的运营商是毋庸置疑的。但如果考虑方便，自由的程度，请移步看以下服务商。</p><h4 id="Digital-Ocean"><a href="#Digital-Ocean" class="headerlink" title="Digital Ocean"></a>Digital Ocean</h4><p><a href="https://m.do.co/c/eaf9c533bc55" target="_blank" rel="noopener">DO</a>算是国内知名度最高的海外云主机运营商。因其超高的性价比，以及便捷的设置，迅速赢得大众的青睐。其中新加坡节点和旧金山节点，是国内用户最常选用的。关于节点的对比请移步<a href="https://www.91yun.org/zh/archives/878" target="_blank" rel="noopener">此处</a>。</p><p>PS：目前注册输入优惠码<code>ACTIVATE10</code>可获得$10。</p><h4 id="Linode"><a href="#Linode" class="headerlink" title="Linode"></a>Linode</h4><p><a href="https://www.linode.com/?r=31b7ad9bbcdac84ed780e48344212c99afcaa3d2" target="_blank" rel="noopener">Linode</a>算是与DO齐名的美国服务商，因其有日本节点，也备受国人青睐。配置也较DO要高些，当然价格最低也要$10起。但最近其日本节点莫名消失，不知何时才能恢复。</p><p>PS: 目前注册输入优惠码<code>PodcastInIt20</code>可获得$20。</p><h4 id="Vultr"><a href="#Vultr" class="headerlink" title="Vultr"></a>Vultr</h4><p><a href="http://www.vultr.com/?ref=7025798" target="_blank" rel="noopener">Vultr</a>最低$5起，配置较DO略高，有768M。有东京和新加坡节点。支持信用卡，paypal，bitcoin支付。其新加坡机房与日本机房速度评测请移步<a href="https://www.freehao123.com/vultr-vps-jp-sg/" target="_blank" rel="noopener">此处</a>（总结下就是日本机房较好）。</p><p>PS: 现在注册输入优惠码<code>DOMORE</code>可获得$50（6个月有效期）。</p><h4 id="vr-org"><a href="#vr-org" class="headerlink" title="vr.org"></a>vr.org</h4><p><a href="http://vr.org" target="_blank" rel="noopener">vr.org</a>是一个知名的香港VPS运营商，目前主要针对企业用户。对于个人用户可到其<a href="https://www.tqhosting.com/cloud" target="_blank" rel="noopener">分公司</a>注册。其国内外的访问速度是毋庸置疑，而且支持CN2线路。但价格也是比较贵，$20的最低配置只相当于DO$10的配置。</p><h4 id="Bandwagon"><a href="#Bandwagon" class="headerlink" title="Bandwagon"></a>Bandwagon</h4><p><a href="https://bwh1.net" target="_blank" rel="noopener">Bandwagon</a>俗称搬瓦工，节点主要在美国。以性价高著称，低配年费只要$19.99。支持Paypal，支付宝，并且支持SS一键配置。特别适合搭建VPN。据说此前还有年费$9.99的配置，可惜已经断货。</p><h4 id="PZEA"><a href="#PZEA" class="headerlink" title="PZEA"></a>PZEA</h4><p><a href="https://www.pzea.com" target="_blank" rel="noopener">PZEA</a>美国西海岸节点VPS。最低$12每年的服务费，让其性价比突破天际了，比平时吃顿饭都便宜。</p><h4 id="Virmach"><a href="#Virmach" class="headerlink" title="Virmach"></a>Virmach</h4><p><a href="https://virmach.com" target="_blank" rel="noopener">Virmach</a>也是高性价比的VPS。其年费最低只需$10，但配置甚至不及一台586，内存只有128M。</p><p>PS：目前注册输入优惠码<code>WHT25</code>可获得七五折。也就是低配只需要$7.5。真是没有最便宜，只有更便宜……</p><h4 id="HostGator"><a href="#HostGator" class="headerlink" title="HostGator"></a>HostGator</h4><p><a href="http://www.hostgator.com/" target="_blank" rel="noopener">HostGator</a>著名的鳄鱼人。Hosting服务价格优惠，而且经常打折，但VPS价格偏高，且没有太多的配置可选。</p><h4 id="Starry"><a href="#Starry" class="headerlink" title="Starry"></a>Starry</h4><p><a href="https://www.starrydns.com/sc/hong-kong-vps" target="_blank" rel="noopener">Starry</a>又是一家香港的VPS服务商，提供针对大陆的线路优化（包括CN2线路）。但价钱比阿里云都贵。</p><h4 id="OpenShift-和-Heroku"><a href="#OpenShift-和-Heroku" class="headerlink" title="OpenShift 和 Heroku"></a>OpenShift 和 Heroku</h4><p><a href="https://www.openshift.com" target="_blank" rel="noopener">OpenShift</a>和<a href="https://www.heroku.com" target="_blank" rel="noopener">Heroku</a>是两个提供免费服务的云应用平台。入门门槛较高，需要一定计算机背景。而且毕竟不是VPS，在一些主机配置方面也多有限制。服务器都在欧美。速度未知。</p><h4 id="Kimsufi"><a href="#Kimsufi" class="headerlink" title="Kimsufi"></a>Kimsufi</h4><p><a href="https://www.kimsufi.com/en/" target="_blank" rel="noopener">Kimsufi</a> 最便宜的独立服务器，最低4.99欧元每月。相比VPS内存，空间等配置绝对出众。节点有欧洲和美国，但据说国内速度不是很理想。用来挂机等不需要持续操作的计算比较合适。</p><p>不少服务器都被抢购一空，可以通过<a href="http://api.check100.xyz/kimsufi/kimsufi-checking.php" target="_blank" rel="noopener">这个网页</a>来监测是否有货。</p><h4 id="OVH"><a href="#OVH" class="headerlink" title="OVH"></a>OVH</h4><p><a href="https://www.ovh.com/ca/en/vps/vps-ssd.xml" target="_blank" rel="noopener">OVH</a> 提供的云服务器内从较高。$4.49的即可获得2G内存，但是CPU是共享，以及硬盘只有10GB SSD。所以基本可用的配置是$8.99， 2.4GHz 1 vCore 4GB RAM 20GB SSD，相比价钱配置已经相当可以。而且2016黑五活动，直接年付，将减半价。</p><h4 id="36Cloud-和-SunnyVision"><a href="#36Cloud-和-SunnyVision" class="headerlink" title="36Cloud 和 SunnyVision"></a>36Cloud 和 SunnyVision</h4><p><a href="http://www.36cloud.com/" target="_blank" rel="noopener">36Cloud</a>据说和<a href="http://www.sunnyvision.com/" target="_blank" rel="noopener">SunnyVision</a>是一家，都是提供香港VPS的服务商。价格中等，从中间服务商处购买会有优惠。</p><p>OVH和SunnyVision的信息来自: <a href="https://ze3kr.com/2016/07/move-to-ovh-and-sunnyvision/" target="_blank" rel="noopener">从 Vultr 迁至 OVH &amp; SunnyVision</a></p><h4 id="VPS的Ping值比较"><a href="#VPS的Ping值比较" class="headerlink" title="VPS的Ping值比较"></a>VPS的Ping值比较</h4><p>使用站长之家的<a href="http://tool.chinaz.com/sitespeed" target="_blank" rel="noopener">Ping检测工具</a>来比较了自己的几个VPS的连接速度：</p><h5 id="DO的新加坡节点"><a href="#DO的新加坡节点" class="headerlink" title="DO的新加坡节点"></a>DO的新加坡节点</h5><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="\img\vps_2.png" alt="新加坡节点Ping测试" title>                </div>                <div class="image-caption">新加坡节点Ping测试</div>            </figure><p>速度真的不可原谅，这哪里是个亚洲节点应有的速度，怪不得不少人宁可选DO的旧金山节点也不用新加坡。</p><h5 id="Vultr日本节点"><a href="#Vultr日本节点" class="headerlink" title="Vultr日本节点"></a>Vultr日本节点</h5><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="\img\vps_3.png" alt="日本节点Ping测试" title>                </div>                <div class="image-caption">日本节点Ping测试</div>            </figure><p>可以接受的速度，至少挂代理和VPN没问题。</p><h5 id="淘宝买的香港VPS"><a href="#淘宝买的香港VPS" class="headerlink" title="淘宝买的香港VPS"></a>淘宝买的香港VPS</h5><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="\img\vps_4.png" alt="香港VPS" title>                </div>                <div class="image-caption">香港VPS</div>            </figure><p>毕竟是国内，速度没得说，最重要的是还不需要备案。价钱较阿里云腾讯云等更加合理。</p><h4 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h4><p>以上为个人笔记，将不定期更新。如果激活码或者链接失效，也欢迎留言指正。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;自从上次&lt;a href=&quot;http://cn.abnerchou.me/blog/88900ae9/&quot;&gt;折腾完DNS&lt;/a&gt;，CloudFlare总显示域名移除（解决方法就是删除DNSPod，等CloudFlare验证后再添加回来）。虽然不知道这些是不是因为自己折腾的过，但
      
    
    </summary>
    
      <category term="笔记" scheme="https://cn.abnerchou.me/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="VPS" scheme="https://cn.abnerchou.me/tags/VPS/"/>
    
      <category term="服务器" scheme="https://cn.abnerchou.me/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>双语网站速度最优配置</title>
    <link href="https://cn.abnerchou.me/blog/88900ae9/"/>
    <id>https://cn.abnerchou.me/blog/88900ae9/</id>
    <published>2016-10-02T21:25:02.000Z</published>
    <updated>2019-11-09T19:24:13.851Z</updated>
    
    <content type="html"><![CDATA[<figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/bilingual_1.jpg" alt="双语" title>                </div>                <div class="image-caption">双语</div>            </figure><h3 id="杂言（可以略过的文字）"><a href="#杂言（可以略过的文字）" class="headerlink" title="杂言（可以略过的文字）"></a>杂言（可以略过的文字）</h3><p>一般技术性文章都是发表在英文博客的，一来是可以练英文，而来中文博客内容偏文艺，太多技术性也有违主题。然而本文写英文，应该不会有太多人看的，因为需要设置中英双语的老外还是凤毛麟角的。所以本文的主体对象还是说中文的。于是就有了本文。</p><h3 id="TL-DR"><a href="#TL-DR" class="headerlink" title="TL;DR"></a>TL;DR</h3><p>有两种方案可以使网站在国内国外访问速度达到最优：</p><ol><li>域名备案，服务器在国内，CDN配置海外节点</li><li>无法备案域名，服务器架设在国内，通过设置DNS将中文子域指向国内的服务器</li></ol><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>双语网站面向不同人群，大多数情况是国籍不同。由于众所周知的原因，中英双语的网站是很难保证速度的。经常是国内访问速度快，海外访问就慢；海外访问快，国内访问就慢。总是鱼与熊掌不可兼得。要论搭建双语网站的难度之最，应该非中英双语莫属。</p><p>起先本博客是搭建在Github Pages, 使用CloudFlare作为DNS和CDN的平台。但发现国外访问速度不错，但国内速度只能呵呵了。但CloudFlare是提供中国节点的啊……至少官网上是这个<a href="https://www.cloudflare.com/cdn/" target="_blank" rel="noopener">说的</a>。一查才知，原来中国节点是面向大客户计划的，并且需要备案。如果我要有备案，谁还用CloudFlare，看来此路不通。经过研究（Google搜索）发现影响网站访问速度的主要有两大因素，一是网站域名解析的速度，其次是网站服务器的访问速度。</p><p>网站服务器的速度不敢恭维，因为Github已经被墙。但由于CloudFlare的CDN，网站还是可以访问的。但一查DNS的route，速度不敢恭维。后来才知道CloudFlare的域名解析国内访问也是各种不稳定。</p><p>于是就想，那把中文博客放到国内服务器，并使用国内的域名解析服务；英文博客所有配置不变，仍用CloudFlare的DNS和CDN（不用CloudFlare的DNS就无法使用其CDN）。</p><p>说做就做。</p><h3 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h3><p>如前文提到，一种极简的方案就是把网站的所有内容都放在国内，再通过配置DNS，这样海外的访问也不太差。但唯一的不足就是需要审核，否则网站搭建寸步难行。对于身在海外无法获得幕布的童靴，也是情何以堪。</p><p>其实大多数情况，中文网站是面向国内用户，希望国内访问速度能快些；而英文网站是面向海外用户，所以国内的访问速度不那么重要，主要是海外用户能够快速打开。于是乎就想到，为何不将中英文网站彻底分离，建立在不同的主机上，使用不同的域名解析服务器。于是就有了第二套方案，也是本文讲的重点。</p><p>对于静态博客， 将主机分离是比较简单的，只需将文件拷贝过去即可。本博客选用Coding Page作为主机，一是迁移Git repo简单，二是免费……</p><p>但对于子域名解析的分离，似乎不那么直观。本博客域名abnerchou.me下有两个子域，cn.abnerchou.me和en.abnerchou.me分别对应中文博客和英文博客。en的子域仍然使用CloudFlare，因为其CDN在海外还是很出色的。于是cn的子域在经过<del>千挑万选</del>百度搜索后，决定使用DNSPod来解析。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/bilingual_2.png" alt title>                </div>                <div class="image-caption"></div>            </figure><p>别被这段文字唬住了，其实完全可以配置多个DNS的。将图中的NS服务器加入域名服务商的自定义DNS中。</p><p>然后为了让DNSPod来处理cn子域，在CloudFlare加入两条NS记录：</p><table><thead><tr><th>Type</th><th style="text-align:center">Name</th><th style="text-align:center">Value</th><th>TTL</th></tr></thead><tbody><tr><td>NS</td><td style="text-align:center">cn</td><td style="text-align:center">f1g1ns1.dnspod.net</td><td>Auto</td></tr><tr><td>NS</td><td style="text-align:center">cn</td><td style="text-align:center">f1g1ns2.dnspod.net</td><td>Auto</td></tr></tbody></table><p>这样cn的子域就从Cloudflare分离出来，Cloudflare在接到所有cn子域的请求都会自动转到DNSPod上去。</p><p>同理，对于www, en等子域，我们也要在DNSPod上设置其转到CloudFlare上。</p><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><p>IP地址：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/bilingual_3.png" alt="IP" title>                </div>                <div class="image-caption">IP</div>            </figure><p>明显两个子域已经指向不同的IP地址了。而且从Ping值上也可看出地域的区别。</p><p>速度 （使用360测速）：</p><p>cn.abnerchou.me <figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/bilingual_4.png" alt="360" title>                </div>                <div class="image-caption">360</div>            </figure></p><p>en.abnerchou.me <figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/bilingual_5.png" alt="360" title>                </div>                <div class="image-caption">360</div>            </figure></p><p>已经不用说什么了，en子域完全无法解析，更不用提速度差距了。</p><h3 id="相关"><a href="#相关" class="headerlink" title="相关"></a>相关</h3><p>文中使用到的网络免费服务：</p><ul><li><a href="http://github.com" target="_blank" rel="noopener">Github</a>/<a href="http://coding.net" target="_blank" rel="noopener">Coding</a></li><li><a href="http://cloudflare.com" target="_blank" rel="noopener">CloudFlare</a>/<a href="http://dnspod.cn" target="_blank" rel="noopener">DNSPod</a></li></ul><p>本博客搭建结构：</p><ul><li>域名：NameCheap</li><li>DNS：DNSPod CloudFlare</li><li>CDN：CloudFlare（海外）</li><li>Hosting：Github（海外）Coding（国内）</li><li>Integration：Travis-Ci（海外）Coding IDE（国内）</li></ul><h3 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h3><p>理论实践都很简单，只是希望记录下来供有需要的童鞋参考。</p><p>现在想想，不明白为什么自己弄双语博客, 只能说是自找麻烦，瞎折腾。但也就这么折腾着，反而把DNS的原理看得更明白了。无非就是些路标性的指令，将网络中的请求引导到正确的IP上，仅此而已。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;image-bubble&quot;&gt;
                &lt;div class=&quot;img-lightbox&quot;&gt;
                    &lt;div class=&quot;overlay&quot;&gt;&lt;/div&gt;
                   
      
    
    </summary>
    
      <category term="技术" scheme="https://cn.abnerchou.me/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="网站" scheme="https://cn.abnerchou.me/tags/%E7%BD%91%E7%AB%99/"/>
    
      <category term="双语" scheme="https://cn.abnerchou.me/tags/%E5%8F%8C%E8%AF%AD/"/>
    
      <category term="DNS" scheme="https://cn.abnerchou.me/tags/DNS/"/>
    
      <category term="GitHub" scheme="https://cn.abnerchou.me/tags/GitHub/"/>
    
      <category term="Coding" scheme="https://cn.abnerchou.me/tags/Coding/"/>
    
  </entry>
  
  <entry>
    <title>王垠大神的蜕变</title>
    <link href="https://cn.abnerchou.me/blog/9cff5063/"/>
    <id>https://cn.abnerchou.me/blog/9cff5063/</id>
    <published>2016-09-22T22:13:52.000Z</published>
    <updated>2019-11-09T19:24:13.851Z</updated>
    
    <content type="html"><![CDATA[<p>或许不用多说，明眼人一看本博客的主题，就知道<a href="http://www.yinwang.org/" target="_blank" rel="noopener">王垠</a>是我心目中计算机界的大神，虽然我也有些时候看不惯他的<a href="/blog/9b288bea/">文章</a>，但其观点犀利，看透业界许多随波逐流的错误观点。总体而言，还是比较喜欢和欣赏的。</p><p>最早了解到他，是因为他总是删自己的文章。在论坛上转载的文章，往往点开已经404了。好奇害死猫，于是就越发想看删掉的，于是就利用搜索引擎，希望找回那段消失的文字。但奈何看着不比他删得快，从而现在也养成了，大神一发文，就存到Evernote的习惯。或许我这里存的文章比王垠自己的都多呢。</p><p>他的文章总能打破自身墨守成规的理念，有如打开了一扇新的大门。新的思想，新的理念。正因为太过新，难免让人觉得激进，又与现今环境格格不入，而且想法也在不断进化，所以无法避免的因为各种原因删掉。留在其博客上的文章都是经过时间考验的。</p><p>然而世间一切都是在变的，尤其是最近半年，通过博客的变化可以感知王垠大神的转变。</p><h4 id="文章更新速度"><a href="#文章更新速度" class="headerlink" title="文章更新速度"></a>文章更新速度</h4><p>以前文章的更新速度，是几个月一篇，现在已经达到一个月几篇。当然质量也有所下降，但不失水准，还是远高于其它博客。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dashen_1.png" alt="王垠博客" title>                </div>                <div class="image-caption">王垠博客</div>            </figure><p>如此频度的发帖也让Alexa排名扶摇直上。</p><h4 id="评论"><a href="#评论" class="headerlink" title="评论"></a>评论</h4><p>王垠博客以前有没有开过评论我不得而知，从我知道他开始，就一直无法评论。不过最近其在<a href="http://www.jianshu.com/users/b1dd2b2c87a8/latest_articles" target="_blank" rel="noopener">简书</a>上的几篇文章还开放了下评论，也是令人有些惊讶。而且同时也使用了新浪微博（现在已停用）。</p><h4 id="水贴与广告"><a href="#水贴与广告" class="headerlink" title="水贴与广告"></a>水贴与广告</h4><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dashen_2.png" alt="王垠博客" title>                </div>                <div class="image-caption">王垠博客</div>            </figure><p>如图，王垠如今也贴开水贴，发开广告了。这一刻觉得大神似乎是觉悟了（本想说开窍，但觉得不妥），也算是意识到自己的知识的重要性。</p><p>水贴少量可以怡情，大量则恐窒息。当看到这篇文章发布时，脑海里闪过无数个不可思议，或许自己并没有理解其文字的内涵，或许图片本身是个秘钥，或许这是在向特定的人传递特定的信息。总之是Shock的。而且这么久了还没删除， <a href="http://www.yinwang.org/blog-cn/2016/06/27/tiger-for-rent" target="_blank" rel="noopener">Shock ^ 2</a>.</p><p>广告本人是支持的，没事也会点俩下表示支持（Google Ad的窥探隐私的能力已经令人发指了，经常广告就是我想要或找的）。只是建议首页不用添加广告，一是大部分外链都是直接指向文章的，而是很少有人会拖拽文章列表从而看到底部的广告。</p><h4 id="付费（捐款）"><a href="#付费（捐款）" class="headerlink" title="付费（捐款）"></a>付费（捐款）</h4><p>以前没有任何方式可以付费给王垠，邮件联系也基本杳无音讯，有种不食人间烟火的感觉。本人不是很赞成付费的，总觉得有辱读书人的斯文。但斯文什么的，在被资本一遍遍践踏过后，已经找不到其原来的意义了。</p><p>或许可以将付费设置的更简便些，比如在文章末尾放一个链接或二维码。现在是每次都要到主页，点付费，有些繁琐。</p><h4 id="微博"><a href="#微博" class="headerlink" title="微博"></a>微博</h4><p>不知道大神玩不玩Twitter， 但知道其很早就使用新浪微博。而且还一度清空微博，与其一言不合就删博客的风格相吻合。前一阵大神重返新浪微博，还引起业界粉丝慕名前往瞻仰。</p><p>但毕竟第三方应用，总是不自由，或者无法完全屏蔽评论（微博可通过转发来达到评论的效果）。于是乎自己写了个Tweet，发布一些奇思妙想。因为有些时候想法都是一闪而过，但又无法成文，所以通过tweet的形式记录下来。</p><p>总体来说，我觉得这些变化是好的，更接地气了。有如神走下了神坛，融入到人群之中。以后还会一如既往的支持王垠大神，争取多点些广告。</p><p>~EOF~</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;或许不用多说，明眼人一看本博客的主题，就知道&lt;a href=&quot;http://www.yinwang.org/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;王垠&lt;/a&gt;是我心目中计算机界的大神，虽然我也有些时候看不惯他的&lt;a href=&quot;/blog/9b2
      
    
    </summary>
    
      <category term="评说" scheme="https://cn.abnerchou.me/categories/%E8%AF%84%E8%AF%B4/"/>
    
    
      <category term="王垠" scheme="https://cn.abnerchou.me/tags/%E7%8E%8B%E5%9E%A0/"/>
    
      <category term="大神" scheme="https://cn.abnerchou.me/tags/%E5%A4%A7%E7%A5%9E/"/>
    
  </entry>
  
  <entry>
    <title>也谈“阿里月饼”事件</title>
    <link href="https://cn.abnerchou.me/blog/c5821abc/"/>
    <id>https://cn.abnerchou.me/blog/c5821abc/</id>
    <published>2016-09-16T22:09:35.000Z</published>
    <updated>2019-11-09T19:24:13.851Z</updated>
    
    <content type="html"><![CDATA[<figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="\img\alimooncake.png" alt="阿里月饼" title>                </div>                <div class="image-caption">阿里月饼</div>            </figure><p>本来不想谈论这个事件，奈何实在看不惯网上那种键盘侠的，只说不练，很难想象他们是否是一个合格的软件工程师。</p><p>首先我的观点是完全赞成阿里的处理，简单明了，不拖泥带水，充分体现了极简的设计理念。古云：勿以恶小而为之，勿以善小而不为。何谓恶小，小偷小摸，欺瞒谎骗。阿里的处理也正体验其企业的价值观，不作恶。</p><p>总结起来，喷阿里的无外乎是两种心态：1. 人事部竟然骑到工程师头上了；2. 作为工程师，不喜欢被规矩束缚，哪怕对他好也不行。第一种心态的人没有了解事情的来龙去脉，甚至希望马云将人事部员工辞退，并且想法太幼稚了。第二种是软件工程师的通病，或者说是脑力工作者的通病，不愿被束缚。但无规矩不成方圆，如果不喜欢被规矩裹脚，那就自起炉灶，但社会也不是没有规矩的。</p><p>看知乎上有人以Google，Facebook等公司鼓励极客精神为例，来反衬阿里小题大做，小鸡肚肠，循规死板。但这些人却没有看到这两件事情没有可比性。Google工程师写脚本来抢免费的衬衣，但并没有将脚本据为己有，而是建立了个邮件组，在衬衣来到时给邮件组的同事发提醒。极客不是炫技，是种分享。如果工程师做出的东西只为自己利益，那与病毒何异。</p><p>认为阿里人事部处理过度的人占大多数，并且马后炮般的说出一套自己的处理方法。但你的方法就真的好么？对得起老老实实，兢兢业业工作的员工么？过分强调工程师对企业的重要性，好像辞去几个人公司就要毁掉了似的。在公司会写脚本，不好好工作的人多了去了；而且高中生写病毒造成上万损失也不是什么新闻。一栋楼建起来要一年，但摧毁它却只需要几秒。技术用在破坏上其实并不是很有难度，甚至不需要什么能力。这几个人的辞去，对阿里不会有任何影响。同时让认真工作的员工感到价值观被认同。</p><p>在网络上，似乎每一个人都变身成经验丰富的管理者，为阿里出谋划策。认为自己的方法是完美的，但其实只是图一时嘴快，满足部分人的心理需求而已。并且拿出各种案例，来反驳阿里的做法。这种五十步笑百步的心态，只不过是自欺欺人而已。</p><p>作为软件工程师也应该从自身出发，寻找解决问题的办法，而不应寄希望于企业或者资本家来体谅脑力劳动者的辛苦。如果每个软件工程师都能一言不合就创业的话，或许也能不会惯出这种不把程序员当人的企业了。</p><p>贴网上与本文观点类似的评论，感觉这样冷静的分析在程序员中鲜有。</p><p>Ada李力（北京未来佳人科技有限公司CEO）的微博<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="\img\alimooncakeref1.PNG" alt="Ada李力（北京未来佳人科技有限公司CEO）的微博" title>                </div>                <div class="image-caption">Ada李力（北京未来佳人科技有限公司CEO）的微博</div>            </figure></p><p>吴军博士的微博<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="\img\alimooncakeref2.PNG" alt="吴军博士的微博" title>                </div>                <div class="image-caption">吴军博士的微博</div>            </figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;image-bubble&quot;&gt;
                &lt;div class=&quot;img-lightbox&quot;&gt;
                    &lt;div class=&quot;overlay&quot;&gt;&lt;/div&gt;
                   
      
    
    </summary>
    
      <category term="评说" scheme="https://cn.abnerchou.me/categories/%E8%AF%84%E8%AF%B4/"/>
    
    
      <category term="中秋" scheme="https://cn.abnerchou.me/tags/%E4%B8%AD%E7%A7%8B/"/>
    
      <category term="程序员" scheme="https://cn.abnerchou.me/tags/%E7%A8%8B%E5%BA%8F%E5%91%98/"/>
    
      <category term="阿里巴巴" scheme="https://cn.abnerchou.me/tags/%E9%98%BF%E9%87%8C%E5%B7%B4%E5%B7%B4/"/>
    
      <category term="月饼" scheme="https://cn.abnerchou.me/tags/%E6%9C%88%E9%A5%BC/"/>
    
      <category term="工程师" scheme="https://cn.abnerchou.me/tags/%E5%B7%A5%E7%A8%8B%E5%B8%88/"/>
    
  </entry>
  
  <entry>
    <title>加拿大安大略省留学移民</title>
    <link href="https://cn.abnerchou.me/blog/a487ac04/"/>
    <id>https://cn.abnerchou.me/blog/a487ac04/</id>
    <published>2016-08-16T03:47:00.000Z</published>
    <updated>2019-11-09T19:24:13.851Z</updated>
    
    <content type="html"><![CDATA[<p><strong>本文写于2015年2月，其中诸多政策已不适用，如有疑问可留言来信，我会尽力解答。</strong></p><p>加拿大移民政策在各省各不相同，在此以Ontario安大略省（安省）为例来说明如何实现通过留学途径获得加拿大永久居民身份。</p><h3 id="综述"><a href="#综述" class="headerlink" title="综述"></a>综述</h3><p>留学移民属于经验类移民，是在加拿大境内申请的一种移民类别，面向有在加拿大工作生活过的人士。</p><p>通过留学途径进行移民的好处是： 以留学名义进入加拿大，更易获得加拿大认可的学历；其次毕业后加拿大给留学生三年工签，有充足的时间能够准备和完成移民申请；再次难度较技术移民简单，比投资移民便宜。</p><p>留学移民的方法两大类</p><p>一、省提名计划</p><p>虽然加拿大永久居民是联邦发布的，但各省为保留人才，都拥有不同数量的提名名额。 一般获得省提名的人士，基本就保证了永久居民申请的获批。<br>省提名又分三种：</p><ol><li><p>公司省提名名额</p><p> 安省对于具有一定规模的企业，给予一定的省提名名额（有些像国内大城市的户口政策）。</p><p> 但此种提名最为简单，只要在公司是永久职工，且公司愿意支持，自己只需考过雅思（每科不低于6），支付申请费，即可申请移民。</p></li><li><p>研究生、博士省提名名额</p><p> 在安省院校毕业的硕士或者博士，可以直接申请省提名。所需条件如下：</p><pre><code>硕士或博士安省学校毕业语言：雅思（每科不低于6）目标居住省份是安省居住在安省满一年</code></pre><p> 满足以上，即可申请。申请费用$1500，但安省一年内大约有5000个名额左右，一般8月份之前就会名额已满，所以最好是前半年申请。</p></li><li><p>基于联邦人才库的省提名</p><p> 联邦人才库是2015年开始实施的评分制，将希望申请移民的人士评分，达到一定分数的人才将放入人才库。</p><p> 安省筛选其中有意在安省工作的人才，给其发放邀请省提名邮件。在收到邮件后，申请人可以提交申请省提名。</p><p> 对于安省如何选择其中的人才，其标准目前仍不知。</p></li></ol><p>二、直接申请联邦经验类移民</p><p>此方案适合既无公司支持，且未获得硕士或博士学位，比如大专或本科毕业。与上一方案最大的不同的是，需要在加拿大有一年以上的全职工作经验方可申请。</p><p>目前联邦经验类移民比较复杂，在去年（2015）实行评分制，将符合条件的放入人才库，取分数较高的录取。基本评分条件有以下：</p><pre><code>学历语言（雅思平均分6分以上）工作经验（需满1年以上）配偶相关信息</code></pre><p>所以即便通过评分，进入人才库，也无法保证必然获批。</p><h3 id="国内大学毕业后移民加拿大方案"><a href="#国内大学毕业后移民加拿大方案" class="headerlink" title="国内大学毕业后移民加拿大方案"></a>国内大学毕业后移民加拿大方案</h3><p>一、读研或读博</p><p>读研，毕业后即可申请安省省提名。申请研究生只需要提供国内的本科成绩，以及语言成绩。这里研究生分为Course-based 和 Thesis-based。Course-based是只需上课，不做研究，一边需要1.5-2年毕业；而Thesis-based是需要做研究，发表论文，一般需要2-3年毕业。两者区别只在于后期深造，Thesis-based对于读博和进研究性机构有帮助。所以如果以移民为目的，Course-based将更适合。</p><p>读博，在读期间即可申请省提名，且无语言要求。但国内直申博士申请难度较大，需本科成绩非常优异，且需要GRE的考试成绩。同时博士学时较长，一般需要4-5年毕业，根据选题难度，最长可能需要6年才毕业。</p><p>二、读大专</p><p>这个一般目的是为了尽快移民。大专从入学到毕业一般是两年时间，但由于本科已修过多门课程，时间可缩短到1年。毕业后安省可给三年工签，利用这三年工签的时间，找份与专业相关的全职工作，并工作一年，通过语言考试，即可申请联邦经验类移民。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;本文写于2015年2月，其中诸多政策已不适用，如有疑问可留言来信，我会尽力解答。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;加拿大移民政策在各省各不相同，在此以Ontario安大略省（安省）为例来说明如何实现通过留学途径获得加拿大永久居民身份。&lt;/p&gt;
&lt;h3 id=
      
    
    </summary>
    
      <category term="杂谈" scheme="https://cn.abnerchou.me/categories/%E6%9D%82%E8%B0%88/"/>
    
    
      <category term="加拿大" scheme="https://cn.abnerchou.me/tags/%E5%8A%A0%E6%8B%BF%E5%A4%A7/"/>
    
      <category term="安大略" scheme="https://cn.abnerchou.me/tags/%E5%AE%89%E5%A4%A7%E7%95%A5/"/>
    
      <category term="留学" scheme="https://cn.abnerchou.me/tags/%E7%95%99%E5%AD%A6/"/>
    
      <category term="移民" scheme="https://cn.abnerchou.me/tags/%E7%A7%BB%E6%B0%91/"/>
    
  </entry>
  
  <entry>
    <title>Frozen Heart Cracked Plot</title>
    <link href="https://cn.abnerchou.me/blog/64cccd95/"/>
    <id>https://cn.abnerchou.me/blog/64cccd95/</id>
    <published>2015-10-11T00:15:00.000Z</published>
    <updated>2019-11-09T19:24:13.851Z</updated>
    
    <content type="html"><![CDATA[<figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://images6.fanpop.com/image/photos/36000000/Frozen-image-frozen-36065977-2560-1600.jpg" alt="爱丽莎" title>                </div>                <div class="image-caption">爱丽莎</div>            </figure><p>最近《冰雪奇缘》出奇的火爆，不少人向我推荐。而且在网上听了其主题曲<a href="http://v.youku.com/v_show/id_XNjQ1MTIwMzc2.html?s=105941" target="_blank" rel="noopener">《Let it go》</a>（另推荐<a href="http://www.bilibili.tv/video/av922328/" target="_blank" rel="noopener">25国语言版</a>），被歌词深深的震撼了。</p><p>电影开场就让人飙泪一把：当安娜坐在爱丽莎的门口反复唱“你想不想堆雪人”，并在空旷的客厅玩耍；身为独生子女能深刻的体会这欢乐背后的孤独，更何况还是有姐姐的呢。</p><a id="more"></a><p>但此感动转瞬即逝，其后的情节虽跌宕起伏，笑料不断，但看完后比较困惑，不少情节让人难以理解。</p><ol><li><p>诅咒从何而来。开篇到结尾一直没有说明，难道这是要拍续集的节奏？</p></li><li><p>为何爱丽莎的魔法直接击中人后，会造成永久的冰冻效果呢？（安娜的白头发）</p></li><li><p>国王和巨魔是什么关系？爱丽莎的魔咒跟父辈的经历似乎有关系。</p></li><li><p>为何没有寻求解除诅咒的方法呢？从小就知道爱丽莎天赋异禀，为何没有寻找解除其身上神力的方法呢？</p></li><li><p>国王和王后对爱丽莎的能力也是阻止，而不是寻找其发挥作用的地方。这似乎映射一些父母教育方面的问题。</p></li><li><p>真爱是亲情，是不求回报的付出。这个可以理解，但为何爱丽莎懂得爱后，立刻就可以施展逆魔法，将大陆冰封解除。如果将爱丽莎比喻成冰法，应该妹妹安娜是火法或许更符合剧情套路。在被真爱解冻后的安娜，利用魔法给艾伦多带来夏天。</p></li><li><p>同上，爱丽莎本身就有收放自如的魔法能力，却一直不知。难道就是因为恐惧么？这样解释有些牵强。</p></li></ol><p>综上，虽然剧情上的瑕疵，并不能阻碍其成为动画中的精品。更别提其绚丽的3D特效了，推荐影院观看。</p><p>这些剧情上的缺陷，是在影片结束后，感到很空洞，回想起来发现剧中有好多没有解释的细节。导演可能是为了拍续集留下一些空间。</p><p>如果拍续集的话，我一定会看。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://th05.deviantart.net/fs71/PRE/f/2013/355/d/6/disney_frozen_by_naschi-d6yrqdf.jpg" alt="爱丽莎" title>                </div>                <div class="image-caption">爱丽莎</div>            </figure>]]></content>
    
    <summary type="html">
    
      Movie review on Fronzen.
    
    </summary>
    
      <category term="评说" scheme="https://cn.abnerchou.me/categories/%E8%AF%84%E8%AF%B4/"/>
    
    
      <category term="电影" scheme="https://cn.abnerchou.me/tags/%E7%94%B5%E5%BD%B1/"/>
    
      <category term="冰雪奇缘" scheme="https://cn.abnerchou.me/tags/%E5%86%B0%E9%9B%AA%E5%A5%87%E7%BC%98/"/>
    
  </entry>
  
  <entry>
    <title>一些关于搭建网页的信息</title>
    <link href="https://cn.abnerchou.me/blog/197c2f57/"/>
    <id>https://cn.abnerchou.me/blog/197c2f57/</id>
    <published>2015-05-13T02:52:00.000Z</published>
    <updated>2019-11-09T19:24:13.851Z</updated>
    
    <content type="html"><![CDATA[<p>此文章写于2014-Aug-01.</p><p>这里只是罗列下搭建个人网站时的工具。</p><p>静态网站：<a href="https://github.com/" target="_blank" rel="noopener">Github</a> 的page功能就足以搭建一个像样的静态页面了。这里有个不错的教程。<br>优点：免费，无限流量，几乎无当机的现象，轻松备份（使用git）<br>缺点：无法支持动态页面（比如留言功能），整站内容可以被他人轻松拷贝（git clone）</p><a id="more"></a><p>动态网站：与其购买支持PHP或ASP的空间，不如在<a href="https://www.digitalocean.com/" target="_blank" rel="noopener">Digital Ocean</a>上买个VPS. 每月只需$5, 20Gb SSD硬盘，而且1TB的流量，对于个人网站来说是绰绰有余。<br>优点：支持各种网站模式，如同私有服务器；可选操作系统；有亚洲、欧洲、美国机房；SSD硬盘，系统安装备份速度快；专有IP<br>缺点：近一周当机两次；需付费；亚洲机房的速度，国内访问不理想；需要熟练使用Apache以及Linux操作系统</p><p>网站域名（Optional）：<br>这里有两个北美最大的域名销售网站：<a href="https://www.namecheap.com/" target="_blank" rel="noopener">Namecheap</a>和<a href="https://www.godaddy.com" target="_blank" rel="noopener">GoDaddy</a>。一般的域名都只需要$10每年，并且提供隐私保护，防止用户信息被Whois查询所泄露。支持DNS文件配置，比如邮件转发，二级域名等。</p><p><strong>网站内容管理：</strong></p><p><a href="http://jekyllrb.com/" target="_blank" rel="noopener">Jekyll</a>是一个网站内容生成工具，使用Markdown格式。虽然功能强大，但要构建一个网站，还需要有CSS以及HTML的知识，并且熟悉Jekyll的架构。（在静态网站的教程中有提及）</p><p><a href="http://octopress.org/" target="_blank" rel="noopener">Octopress</a>是一个基于Jekyll的静态网站生成器。相比于Jekyll，它提供现成的网站模板，并将Jekyll的搭建，生成，及发布自动，使得用户更专注于写作。缺点是它与Github集成，只能用于Github Page的搭建。(本网站即是基于Octopress)</p><p><a href="https://disqus.com/" target="_blank" rel="noopener">Disqus</a>是网站评论系统。只需要添加一段Js代码到网页中，即可实现评论功能。适用静态网页，或拥有多个网站的管理员。此工具可以弥补Github Page无法评论的缺陷。</p><p><a href="https://sites.google.com" target="_blank" rel="noopener">Google Site</a>是一个简洁明了的在线网站构建。</p><p><a href="https://zh-cn.wordpress.com/" target="_blank" rel="noopener">Wordpress</a>是知名的网站内容管理系统。如果有自己的VPS，它的一键安装能省下不少时间精力。</p>]]></content>
    
    <summary type="html">
    
      Some info for build website.
    
    </summary>
    
      <category term="技术" scheme="https://cn.abnerchou.me/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="博客" scheme="https://cn.abnerchou.me/tags/%E5%8D%9A%E5%AE%A2/"/>
    
      <category term="网站" scheme="https://cn.abnerchou.me/tags/%E7%BD%91%E7%AB%99/"/>
    
      <category term="域名" scheme="https://cn.abnerchou.me/tags/%E5%9F%9F%E5%90%8D/"/>
    
  </entry>
  
  <entry>
    <title>《VIM-Adventures攻略》 LEVEL 4、5</title>
    <link href="https://cn.abnerchou.me/blog/46d23509/"/>
    <id>https://cn.abnerchou.me/blog/46d23509/</id>
    <published>2014-03-11T00:15:00.000Z</published>
    <updated>2019-11-09T19:24:13.851Z</updated>
    
    <content type="html"><![CDATA[<p>上一篇文章忘记说明文本编辑器的模式：</p><blockquote><p>所有文本编辑器都至少有两种模式，编辑模式和控制模式。编辑模式就是普通的文本输入，但控制模式似乎并不多见。由于平时我们所用的word并没有明确的区分这两种模式，但通过快捷键及按钮辅助，控制模式对我们也不是很陌生。</p></blockquote><blockquote><p>在vim中这两种模式的切换是通过Esc键来完成的，有明确的划分。在控制模式下键盘的按键不再是简单字符，而是具有相应的控制功能。</p></blockquote><blockquote><p>简单这么说明下，也就方便理解学习这些快捷键的重要性了。</p></blockquote><p><strong>公告：</strong>《VIM-Adventures》的作者愿意免费赠送一个此游戏的激活码给在本系列攻略中留言的用户。活动详情请见本文末。</p><p>前三关是试玩关卡，难度还算简单；但其后的关卡是越来越难。</p><p><strong>第四关：</strong></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://images.cnitblog.com/blog/605265/201403/101035419231391.jpg" alt="第四关" title>                </div>                <div class="image-caption">第四关</div>            </figure><p>本关学习按键：</p><ul><li>W 跳转到下一个字符串的首字母 （对应英文单词Word）</li><li>E 跳转到下一个字符串的尾字母 （对应英文单词End）</li><li>r 更改一个字符 （对应英文单词Replace）</li></ul><p>本关相对比较简单，只需要按照要求练习删除和修改就可通关。</p><p>关于W、E与w、e的区别，可以参考<a href="http://www.cnblogs.com/dreamstar/p/3581421.html" target="_blank" rel="noopener">B与b的区别</a>。</p><p><strong>第五关：</strong></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://images.cnitblog.com/blog/605265/201403/101039492515063.jpg" alt="第五关" title>                </div>                <div class="image-caption">第五关</div>            </figure><ul><li>d 可与w、e、b、W、E、B、h、j、k、l、d等字符组合，用来删除字符串或者句子。 （对应英文单词Delete）</li></ul><p>首先通过删除和修改来获得d键，这个比较简单和第四关差不多。</p><p>通过提示可以获知，d键与其它已习得的按键组合，可以达到快速删除字符、单词、字符串、以及句子、段落的效果。</p><p>简单说明下其主要组合：</p><ul><li>dl 与x功能一样，删除光标下一个字符，相当于键盘上的Del； dh 与之相反，功能相当于键盘上的backspace</li><li>dw、de、dW、dE 均为向后删除一个单词或字符串，区别在于de/dE是从当前位置到单词或字符串末尾，而dw/dW是删除当前位置到下一个单词或字符串之前</li><li>db、dB 向前删除一个单词或字符串。需要注意的是光标下的字符不删除</li><li>dk、dj 分别是向上和向下删除两行</li><li>dd 删除本行</li></ul><p>本关难点在下图标注的蓝色区域：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://images.cnitblog.com/blog/605265/201403/101103428298997.jpg" alt="难点" title>                </div>                <div class="image-caption">难点</div>            </figure><p>在没有提示的情况下很难想到dj或dk可以删除两行。另外一点是，X所在的位置没有标注要删除，但注意最下方的一行话：“BTW， X does mark the spot”也就是说X即是标记所在的位置，站在上图标注的蓝色方框”.”上，按dB即可删除X （直接在X上按x键是不行的，不过系统会提示正确方法）。</p><p>第五关卡了好久，就是没有明白他所说的“X does mark the spot”的具体含义，浪费了不少时间。</p><p>下一章节第6关，敬请期待～</p><p><strong>活动详情</strong></p><p>用户需要达成以下两个要求即可获得抽奖资格：</p><ol><li>在本系列文章中留言；</li><li><del>推荐本系列的任一文章。</del>关注博主。</li></ol><p>（如果可能的话再<del>关注下博主</del>推荐本系列任一文章，不胜感激。）</p><p>（更新：由于无法获知谁推荐了文章，所以还是以留言和关注信息作为抽奖标准吧。）</p><p>抽奖将在本系列文章连载结束后进行，届时将通过博客园站内信通知获奖用户。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;上一篇文章忘记说明文本编辑器的模式：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;所有文本编辑器都至少有两种模式，编辑模式和控制模式。编辑模式就是普通的文本输入，但控制模式似乎并不多见。由于平时我们所用的word并没有明确的区分这两种模式，但通过快捷键及按钮辅助，控制模式对我们
      
    
    </summary>
    
      <category term="VIM-Adventures攻略" scheme="https://cn.abnerchou.me/categories/VIM-Adventures%E6%94%BB%E7%95%A5/"/>
    
    
      <category term="游戏" scheme="https://cn.abnerchou.me/tags/%E6%B8%B8%E6%88%8F/"/>
    
      <category term="VIM" scheme="https://cn.abnerchou.me/tags/VIM/"/>
    
  </entry>
  
  <entry>
    <title>《VIM-Adventures攻略》 LEVEL 1-3</title>
    <link href="https://cn.abnerchou.me/blog/e40e2146/"/>
    <id>https://cn.abnerchou.me/blog/e40e2146/</id>
    <published>2014-03-05T00:15:00.000Z</published>
    <updated>2019-11-09T19:24:13.851Z</updated>
    
    <content type="html"><![CDATA[<p>上期有人提到此游戏烂尾。其实没有啦，作者是位“贪财”的主，不付费不给玩剩下的章节。在第三关结束时的提示也没有明确说要付费的意思。毕竟是独立游戏，要求也不能那么高了。</p><p><strong>第一关：</strong></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://images.cnitblog.com/blog/605265/201403/042213302963186.png" alt="第一关" title>                </div>                <div class="image-caption">第一关</div>            </figure><p>学习按键（大小写有区别）：</p><ul><li>h 向左</li><li>j 向下</li><li>k 向上</li><li>l 向右</li><li>:help 查看帮助文档可以在其后跟字符来查看相应字符的功能如“:help j”</li></ul><p>这一关相对比较简单，主要是熟悉下vim的光标操作。有点难度的地方是如何过最后三个反向斜坡。这里需要用到vim的光标记忆功能（不知道是不是这么叫），即在上一行光标所在的位置，到下一行也是同样位置，如果下一行较短，光标将停留在其末尾。</p><p>所以我们只需要在以下三个点分别按j，k即可通过：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://images.cnitblog.com/blog/605265/201403/042251226392933.jpg" alt="跳点" title>                </div>                <div class="image-caption">跳点</div>            </figure><p><strong>第二关：</strong></p><p>第一关的宝箱不用管，因为这是只有到第三关才能获取的。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://images.cnitblog.com/blog/605265/201403/042337293664020.jpg" alt="第二关" title>                </div>                <div class="image-caption">第二关</div>            </figure><p>第二关可以习得的按键（必须要捡到相应的按键方可以使用）：</p><ul><li>w 光标向前移动到下个单词首字母</li><li>e 光标向前移动到单词尾字母</li><li>b 光标向后移动到单词首字母</li></ul><p>这样轻轻松松就可以拿到通往下一关的三个钥匙。石头是可以被越过的，可以把w,e,b想象成单词间穿梭的传送，石头或墙是无法阻挡的。</p><p><strong>注</strong>：这里先别惦记着第一关的箱子，这里学习的按键还无法取得，而且还需要钥匙。后面将会有说明。</p><p><strong>第三关：</strong></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://images.cnitblog.com/blog/605265/201403/042302553129920.jpg" alt="第三关" title>                </div>                <div class="image-caption">第三关</div>            </figure><ul><li>B 光标向后移动到字符串首</li><li>x 删除字符串</li></ul><p>B 和 b 的区别是什么呢？ 假设我们有个字符串“Hello World!!!”我们光标在句子末尾的感叹号上，此时按b，光标会跳到第一个感叹号上，按B，光标会跳到W上。看到区别了么？ 一个是单词，一个是字符串。在vim中，连续的字母或符号可以认为是一个单词，而连续的字母和符号可以组成字符串。这也就是说如果只有b键的话到第一关的箱子那，仍然会被石头卡住。</p><p>x按键的取得要通过下面的小岛，要在30秒内到达。这里有个小技巧，就是w，e来回按即可，按w不行就按e，e不行就w，总之不太费劲。</p><p>用x按键将红色字符删除后，就会出现宝箱钥匙。</p><p>拿上宝箱钥匙到第一关宝箱的“!”处，用B键即可跳入，取得蜡烛。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://images.cnitblog.com/blog/605265/201403/042332553331602.jpg" alt="宝箱" title>                </div>                <div class="image-caption">宝箱</div>            </figure><p>此时阴影笼罩了，vim大陆，作为勇者的你要将这仅有的希望之光带给大陆的人民。</p><p>摸黑返回第三关，即可开启第四关。</p><p><strong>前三关总图</strong></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://images.cnitblog.com/blog/605265/201403/042332357445216.jpg" alt="前三关总图" title>                </div>                <div class="image-caption">前三关总图</div>            </figure><p>这就是免费的前三关，如果希望玩其后的十关需要付费，价格是$25。</p><p>可气的是竟然只能玩6个月……要不说作者“贪财”呢。不过能够将学习难度如此之高的vim编辑器做成游戏也很有创意的，通过前三关已经学到不少东西。如果真的有心学习的话$25不就相当于一本书钱，而6个月呢……就是一把皮鞭，催促着你快速学习……</p><p>好吧只能阿Q般的纪念我逝去的$25了……</p><p>下期将带来<a href="http://www.cnblogs.com/dreamstar/p/3591382.html" target="_blank" rel="noopener">第4，第5关</a>的攻略，敬请期待～</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;上期有人提到此游戏烂尾。其实没有啦，作者是位“贪财”的主，不付费不给玩剩下的章节。在第三关结束时的提示也没有明确说要付费的意思。毕竟是独立游戏，要求也不能那么高了。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;第一关：&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;image-
      
    
    </summary>
    
      <category term="VIM-Adventures攻略" scheme="https://cn.abnerchou.me/categories/VIM-Adventures%E6%94%BB%E7%95%A5/"/>
    
    
      <category term="游戏" scheme="https://cn.abnerchou.me/tags/%E6%B8%B8%E6%88%8F/"/>
    
      <category term="VIM" scheme="https://cn.abnerchou.me/tags/VIM/"/>
    
  </entry>
  
  <entry>
    <title>《VIM-Adventures攻略》前言</title>
    <link href="https://cn.abnerchou.me/blog/bfdaadb0/"/>
    <id>https://cn.abnerchou.me/blog/bfdaadb0/</id>
    <published>2014-03-03T00:15:00.000Z</published>
    <updated>2019-11-09T19:24:13.851Z</updated>
    
    <content type="html"><![CDATA[<p>自从有了计算机，人们就想向其灌输自己的想法。</p><p>要想对其输入，自然离不开文本编辑器。</p><p>公告：《VIM-Adventures》的作者愿意免费赠送一个此游戏的激活码给在本系列攻略中留言的用户。活动详情请见本文末。</p><p>最近一直在学习Emacs，这个几乎和我同龄的软件，在发展如此迅速的时代依然有不少程序员的死忠粉，不禁让人诧异。友人常问：”现在既然都有IDE了，还学那么古老的编辑器干什么？” 刚开始我也这么认为，但自从在Linux下写程序后才发现，Linux的IDE是多么的坑了。且不说安装要费老半天劲（apt-get 得到的一般不是最新版本），装好后调试编译环境又是半天，最可气的是，一切都弄好后，突然要换电脑工作，我总不能把硬盘拔了带着吧。而且常用IDE产生了IDE依赖症，甚至不用某个厂商的IDE，就不会写代码了。于是在网上就找到了Emacs，支持自定义化配置，配置文件小巧可随时备份，甚至可以用来煮咖啡。</p><p>等等，等等，题目是vim啊，说了半天Emacs是作甚？当然我认识vim比Emacs要早，因为vim是Linux系统自带的vi的进阶版。当时是为了远程修改一些配置文件才不得已学了两下，但发现其不够直观，进入后完全不知道该如何操作。也就了解了下如何插入，修改罢了。</p><p>但Emacs欢迎界面就有一个15分钟左右的教程（怎么又扯回Emacs了）。上手难度陡降，但发现越学深入越有东西要学，比如系统配置，eLisp语言，自定义插件等等……一切都还好，但……但……光标的移动有点太……难了吧……C+n下一行，C+p上一行，C+v下一页，M+v上一页，C+f向后，C+b向前（C代表Ctrl，M代表Alt或类似键）……有时只需要光标向后移一下，竟然要按两个键，有点太低效了吧。这时候vim闪亮登场（我是用Emacs下的Evil插件来实现vim控制的），它的控制只需要h,j,k,l,单键即可控制光标移动，有点像上下左右方向键。所以，我觉得有必要结合Emacs和vim来降低其学习曲线了：</p><p>常见编辑器的学习曲线&lt;图&gt;</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/editorLearningCurve.jpg" alt="Vim学习曲线" title>                </div>                <div class="image-caption">Vim学习曲线</div>            </figure><p>vim的入门难和Emacs的后期变态让人望而生畏。vim入门难，到底难在什么地方呢？难在养成一种习惯，即键盘上26个按键不再是普通的按钮，其还附有了特殊的意义。而且其上下左右键是k,j,h,l，这是多么的蹩脚啊，为啥不向CS学习下设置成w,s,a,d。因为w，s，a，d其本身还有特殊含义。vim的按键已经可以算是最优了，在不触动鼠标的情况下，可以快速完成各种操作，比如dd是删除一行，db是删除前一个单词，dk是向前删除两行等等。以前都是要多次按键，或者用鼠标协作，现在完全可以用键盘快速完成。</p><p>有的人用不惯vim的方向键就早早的退出了。其实只要练习，没有什么难的，这里有个简单的贪吃蛇游戏，就是用vim的方向键来控制。在吃的时候要按 i (即vim里的插入功能) 才可以，并且在吃完后按Esc返回键盘控制。我的最高分只有700。 T_T</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/vimAdventureStartupPage.jpg" alt="开始界面" title>                </div>                <div class="image-caption">开始界面</div>            </figure><p>当然这里要说的VIM-Adventures 不单单用游戏的形式来练习光标控制，还可以通过游戏学习到vim的按键操作。通过其可以学习的操作有：</p><blockquote><p>h j k l : w W e E b B x X r d dd D ~ 0 ^ $ f F t T ; , % z zt zz zb g gg G 1 2 3 4 5 6 7 8 9 count [count] * # n N p P “ y yy Y reg :reg registers “” “- “_ “0 “1 “2 “3 “4 “5 “6 “7 “8 “9 “a “b “c … “x “y “z “A “B “C … “X “Y “Z i I a A c cc C s S o O word WORD sentence paragraph { } ( ) [{ ]} [( ]) . text-objects aw iw aW iW as is ap ip a[ a] i[ i] a( a) i( i) a&lt; a&gt; aB iB ab ib i&lt; i&gt; at it a{ a} i{ i} a” i” a’ i’ a<code>i</code> H M L nu nonu nu! nonu! | / ? ` ‘ m :marks :delm :delmarks :delm! :delmarks! undo u :undo CTRL-R :redo redo</p></blockquote><p>在其后的章节，我将详细讲解其每一关的攻略。因为我发现本游戏不光需要知道vim的操作，还有一定的解谜成分。并通过游戏本身了解到vim编辑器一些自身的特性。</p><p>敬请期待～</p><p><a href="/blog/e40e2146/">LEVEL 1-3</a></p><p><a href="/blog/46d23509/">LEVEL 4 5</a></p><p>抽奖活动详情</p><p>用户需要达成以下两个要求即可获得抽奖资格：</p><p>在本系列文章中留言； 关注博主。 （如果可能的话再推荐本系列任一文章，不胜感激。）</p><p>抽奖将在本系列文章连载结束后进行，届时将通过博客园站内信通知获奖用户。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;自从有了计算机，人们就想向其灌输自己的想法。&lt;/p&gt;
&lt;p&gt;要想对其输入，自然离不开文本编辑器。&lt;/p&gt;
&lt;p&gt;公告：《VIM-Adventures》的作者愿意免费赠送一个此游戏的激活码给在本系列攻略中留言的用户。活动详情请见本文末。&lt;/p&gt;
&lt;p&gt;最近一直在学习Emacs
      
    
    </summary>
    
      <category term="VIM-Adventures攻略" scheme="https://cn.abnerchou.me/categories/VIM-Adventures%E6%94%BB%E7%95%A5/"/>
    
    
      <category term="游戏" scheme="https://cn.abnerchou.me/tags/%E6%B8%B8%E6%88%8F/"/>
    
      <category term="VIM" scheme="https://cn.abnerchou.me/tags/VIM/"/>
    
  </entry>
  
  <entry>
    <title>你有强迫症么？</title>
    <link href="https://cn.abnerchou.me/blog/10b52d47/"/>
    <id>https://cn.abnerchou.me/blog/10b52d47/</id>
    <published>2014-02-28T04:12:00.000Z</published>
    <updated>2019-11-09T19:24:13.851Z</updated>
    
    <content type="html"><![CDATA[<p>好像强迫症最近突然的流行起来，好像谁没点强迫症都不好意思见人。</p><p><img src="http://images.cnitblog.com/blog/605265/201402/272253582995159.jpg" alt="谢耳朵" height="530" width="415" align="absmiddle"></p><p>这个程序的灵感来源<a href="http://www.bilibili.tv/video/av984435/" target="_blank" rel="noopener">MikeZTM</a>在其游戏视频中说的一句话，于是就想在Android上实现一下怎样呢？</p><p>MikeZTM说的是做一个App，就显示信息提示，其它什么都不做，看强迫症怎么办？<br><a id="more"></a></p><p><img src="http://images.cnitblog.com/blog/605265/201402/272304084071686.jpg" alt="ios" height="107" width="320" align="absmiddle"></p><p>这是ios系统特有的一种功能，想着挺简单的一个实现啊，那就做做试试吧。</p><p>一做才知道原来Android是不支持修改应用图标的。在经过几轮谷歌搜索后，有两种解决方案：</p><ol><li>使用Widget来模拟图标，然后再用RemoteViews来控制用户点击事件。</li><li>在Android的项目的Resource中添加多款图标，在程序执行时更换图标。</li></ol><p>第二种方法明显费力不讨好。因为不可能做成百上千个图标来仅仅为实现一个提示功能，所以只能用第一种方案。</p><p>实现效果：</p><p><img src="http://images.cnitblog.com/blog/605265/201402/272325102973466.png" alt height="420" width="260" align="absmiddle"></p><p>第一种方案需要解决的就是Widget和应用间的通信，因为widget在系统中相当于独立进程，所以之间通讯需要使用PendingIntent。</p><p>仍需改进的地方: 如何获取单独Widget的ID号，这样可以让不同Widget有不同的显示。总点击计数及修改图标在MainActivity里。</p><p>应用下载地址：<a href="http://pan.baidu.com/s/1sjFDikl" target="_blank" rel="noopener">http://pan.baidu.com/s/1sjFDikl</a></p><p>使用方法：</p><p><img src="http://images.cnitblog.com/blog/605265/201402/272323445937216.png" alt="Widget" height="420" width="260" align="absmiddle"></p><ol><li>安装程序后，拖拽此程序的Widget到主界面。</li><li>疯狂点击，感受强迫症的焦躁吧！ ^_^</li></ol><p><img src="http://images.cnitblog.com/blog/605265/201402/272317242935234.png" alt height="420" width="260" align="absmiddle"></p><p>具体实现代码可见<a href="https://github.com/NoahDragon/do-you-have-ocd" target="_blank" rel="noopener">源代码</a>，第一次写Android，很多尝试及注释没清理，望见谅。</p>]]></content>
    
    <summary type="html">
    
      Funny tiny android app to test if you have ocd.
    
    </summary>
    
      <category term="技术" scheme="https://cn.abnerchou.me/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="应用" scheme="https://cn.abnerchou.me/tags/%E5%BA%94%E7%94%A8/"/>
    
      <category term="Android" scheme="https://cn.abnerchou.me/tags/Android/"/>
    
      <category term="APP" scheme="https://cn.abnerchou.me/tags/APP/"/>
    
  </entry>
  
  <entry>
    <title>解读《CodeEval 2014 最流行编程语言》</title>
    <link href="https://cn.abnerchou.me/blog/fa87ae80/"/>
    <id>https://cn.abnerchou.me/blog/fa87ae80/</id>
    <published>2014-02-23T22:16:00.000Z</published>
    <updated>2019-11-09T19:24:13.851Z</updated>
    
    <content type="html"><![CDATA[<figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://images.cnitblog.com/blog/605265/201402/230529284143047.jpg" alt title>                </div>                <div class="image-caption"></div>            </figure><p>首先了解下<a href="http://www.codeeval.com" target="_blank" rel="noopener">CodeEval</a>是做什么的:</p><blockquote><p>A tool for auto evaluating programming challenges in C/C++/Java/Python/ Ruby/PHP/Perl/ Scala/Clojure/C#/Tcl/ JavaScript/ Haskell/Go/ Bash/Lua and many more.</p></blockquote><p>重点是这个Programming Challenges， 也就是说给定题目，让用户来解题，支持如上列出的多种语言，但不支持第三方库。</p><p>这个编程语言排行也是根据用户解题时所用语言而制作出来的。所以这个排行无法看作是计算机行业对编程语言的需求。<br><a id="more"></a></p><p>就个人体验而言，在其上解题的用户有以下几种特征：</p><ol><li>学习编程；</li><li>熟悉一种新的程序语言；</li><li>应聘相应工作（CodeEval会定期举行解题赢取面试机会的活动）。</li></ol><p>对于第一种用户，他们使用的语言可能比较基本和常见，不会使用网络端常见的Ruby，PHP，Perl等语言。</p><p>而第二种用户，是已经掌握了一至二种语言，需要练习第三种语言，纯为娱乐。往往会使用一些与主流程序语言，或者其工作中常用的程序语言所不同的。</p><p>第三种用户，为了获取面试机会，一定会选取高效快速的程序语言。</p><p>再者，由于解题多用到命令行文件输入，就笔者经验（C/C++/C#/Java/Python/JavaScript/PHP),Python的文件操作最简单快捷。对于字符串转浮点整形等也是相当轻松。有些题目甚至Python只需一个函数就解决了，比如将输入文本的字母大写转成小写，小写转成大写。</p><p>之所以<a href="http://www.python.org/" target="_blank" rel="noopener">Python</a>为何能成为榜首，可以看出：一是由于其简单易学，二是由于其方便简洁的文本文档的操作方式，三是丰富的内置函数。</p><p>Code Eval对程序的硬性限制只有一条（除去编译错误），就是运行时间不得超过10秒。但就其简单和中级的题（占总题量70%左右）来看，要写出超过10秒运行的程序也难。</p><p>在挑战题目时，用户也不许要考虑内存，CPU运算速度，网络，硬盘操作等问题。（具体CodeEval的编译环境配置未知）</p><p>综上，Python远较其它语言更适合进行解题。但鄙人在日常使用Python时，深受其速度拖累，核心算法还是首选C++或Java。</p><p>总而言之，这个排行榜只是一种兴趣级别的语言排行，而非企业应用级的排行。对于没有计算机学科基础，但又对编程感兴趣的同学，可以先从Python学起；Python作为兴趣级别的使用已经足够了，只不过以后要转C/C++可能会很不适应。 ^_^</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://images.cnitblog.com/blog/605265/201402/230531525241340.png" alt title>                </div>                <div class="image-caption"></div>            </figure><p>英文报道：<a href="http://blog.codeeval.com/2014#.UwkgkHVdWKk" target="_blank" rel="noopener">点我</a></p>]]></content>
    
    <summary type="html">
    
      How should we view the popular programming language.
    
    </summary>
    
      <category term="技术" scheme="https://cn.abnerchou.me/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="程序语言" scheme="https://cn.abnerchou.me/tags/%E7%A8%8B%E5%BA%8F%E8%AF%AD%E8%A8%80/"/>
    
      <category term="CodeEval" scheme="https://cn.abnerchou.me/tags/CodeEval/"/>
    
  </entry>
  
  <entry>
    <title>断翅</title>
    <link href="https://cn.abnerchou.me/blog/c2ba49a9/"/>
    <id>https://cn.abnerchou.me/blog/c2ba49a9/</id>
    <published>2014-02-22T00:15:00.000Z</published>
    <updated>2019-11-09T19:24:13.851Z</updated>
    
    <content type="html"><![CDATA[<p>梦·翱翔</p><p>飞过蓝色的空，身后划过淡淡的痕迹。骄傲地望向身后，一望无际的白云与山峦。面前是无边的海，海的尽头是温暖的南海岛国。</p><p>心间·云海</p><p>曾经听老一辈们说，云层的云层上面是一片海，天蓝色的。那里是云的故乡，云都是从那里来的。层层的云端到底是什么地方，童年的梦都发生在那里……</p><p>云·云上</p><p>一遍一遍的努力，千百次的挥动翅膀，在那云海中穿梭。目标，天与海的交界，永无黑暗。</p><p>Update: 四五年前（？估计不止）写的了，还是发表了吧，事过境迁，灵感已逝，已忘记当时所要表达的主题了。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;梦·翱翔&lt;/p&gt;
&lt;p&gt;飞过蓝色的空，身后划过淡淡的痕迹。骄傲地望向身后，一望无际的白云与山峦。面前是无边的海，海的尽头是温暖的南海岛国。&lt;/p&gt;
&lt;p&gt;心间·云海&lt;/p&gt;
&lt;p&gt;曾经听老一辈们说，云层的云层上面是一片海，天蓝色的。那里是云的故乡，云都是从那里来的。层层的云
      
    
    </summary>
    
      <category term="文艺" scheme="https://cn.abnerchou.me/categories/%E6%96%87%E8%89%BA/"/>
    
    
      <category term="诗" scheme="https://cn.abnerchou.me/tags/%E8%AF%97/"/>
    
  </entry>
  
  <entry>
    <title>给简书的一点建议</title>
    <link href="https://cn.abnerchou.me/blog/c4e320f3/"/>
    <id>https://cn.abnerchou.me/blog/c4e320f3/</id>
    <published>2014-02-17T16:46:00.000Z</published>
    <updated>2019-11-09T19:24:13.851Z</updated>
    
    <content type="html"><![CDATA[<figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://i1.sinaimg.cn/dy/c/sd/2011-02-28/U2494P1T1D22028511F21DT20110228172620.jpg" alt title>                </div>                <div class="image-caption"></div>            </figure><p>最为简书的新人，一上来就提意见，是不是有点太……实诚了。所以很谦虚的说“一点”。其实也正因为新，所以还有一定的适应期，就把所有感受到的不便罗列如下。 ^_^</p><p><em>这些建议都成型于两周前左右，期中可能简书有所更新，有些问题可能已不存在。</em></p><ul><li>阅读量刷新即得</li></ul><p>这点是所有网页的老问题了，将每次点开页面都算作是阅读量。这个数据明显不准确，作者无法了解自己文章的趋势，同时也可以利用刷新的方法来恶意增加阅读量。</p><ul><li>整天码字的不光有作家，还有程序员</li></ul><p>Markdown模式已经非常方便了。但对于程序员可能更希望使用自己平时写代码的工具来写博客。这就需要简书开放接口，一是可以满足程序员的Geek情节；二是促进简书的发展，吸引程序员开发相关应用。<br><a id="more"></a></p><ul><li>网站帮助联系信息要拖到网页最下才可看到</li></ul><p>起先还以为是左边图片右下角的那个感叹号呢……找了半天才找到网站帮助与联系信息，或许这些对于新用户比较重要的信息应该放在更易找到的地方。</p><ul><li>为何主页左边图片右下角的链接是跳转到Tumblr</li></ul><p>虽然是简叔的主页，但给人一种奇怪的感觉。因为简叔在简书上也有主页，为什么要链接到他的Tumblr页面呢？</p><ul><li>用户头像的下拉列表找不到写文章的按钮</li></ul><p>这个明显不符合正常的操作习惯。用户头像的下拉列表一般都包含所有的用户可操作功能。</p><ul><li>专题页面过长，没有相关分类</li></ul><p>找一个相关专题很麻烦。专题投稿或许可以添加在文本发布中。而且专题页上的搜索，是跳转到Google进行全站检索。对于专题的关键字完全可以控制为自动跳转。比如在专题页的搜索框输入：“程序员”，自动跳转到程序员的专题页，而非进入Google页面再点击。这个实现相对比较简单，就是需要建立个Hashmap，但对用户体验会有提升。</p><ul><li>动态头像闪啊闪</li></ul><p>这个允许上传动态头像并不太好。刚开始觉得好玩，但后来发现显示在主页的时候头像也是动态的。当然一两个用户或许影响不大，但如果满屏用户都使用动态图片，那与一般网页上闪动的小广告何异呢？或许可以限制动态图像显示的区域，比如只在用户主页上显示，但简书主页，以及用户右上角小图标使用动态图片第一帧作为静态。</p><ul><li>提醒，简信，我的闪光点</li></ul><p>不知有何区别？为何要设置这么多种提醒的模式，集合成一个不好么？</p><ul><li>最新动态</li></ul><p>为何有自己的信息？ 自己或许并不需要提醒自己最近做了什么吧？自己更关心的是喜欢用户所发的文章。或许增加个过滤器，可以让用户自己选择是显示评论动态，还是文章，甚至两者都有。</p><ul><li>搜索跳谷歌</li></ul><p>在Mac上有个BUG，就是跳转谷歌后显示的是空页面，并不是搜索结果。同时感觉哪怕使用iframe的方式，也不要跳转出去较好。跳转出去后原有的简书边框，用户图标等均缺失。如想执行其它操作就需要切换回来，比较影响用户体验。对于自建网页搜索引擎，推荐使用开源的<a href="https://nutch.apache.org" target="_blank" rel="noopener">Apache Nutch</a>。</p><ul><li>写作页面分三列是为何？</li></ul><p>虽然比较像Mac的文件管理模式，但感觉占用了太多的屏幕空间。如果可以自动展开或收缩就完美了。</p><ul><li>“我喜欢的”和”动态”功能</li></ul><p>这两个功能有重叠，而且在“我喜欢的”页面里无法编辑喜欢用户或者文章，比如取消喜欢，或者分类等。</p><ul><li>喜欢和分享文章在最下</li></ul><p>有时候看完忘记点了又要回来拖动一遍进度条。可以做成浮动窗口，与用户小头像同步即可。</p><ul><li>自己可以喜欢自己的文章</li></ul><p>和自己给自己点赞一样，这一种深沉的寂寞。</p><ul><li>用户页面点开文章后再返回，会发现以前展开的查看更多的文章又收回去了</li></ul><p>后来发现主页文章打开方式都是弹窗的完全不需要用浏览器的后退键，可是弹窗在Mac用起来感觉很别扭（切换窗口比网页的前进后退要麻烦，用过Mac的Touchpad的童鞋都懂的）。与此对应的是用户主页却不弹窗。有时翻到老后面了，点击查看了一篇文章返回后又到了第一页。如果还想看，就得一遍一遍的点开“点击查看更多”。</p><ul><li>主页点击文章打开新的窗口，mac上用起来不方便</li></ul><p>理由同上。同时对于平板和手机上查看简书文章造成不便。</p><ul><li><a href="http://logdown.com" target="_blank" rel="noopener">Logdown</a>: Markdown上传图片解决方案</li></ul><p>Logdown提供的编辑器可以加强Markdown的功能，不仅支持图片拖拽上传，还支持LaTex的公式标记（这个功能感觉国内博客鲜有）。可以供简书作为借鉴和参考。</p><ul><li>@功能</li></ul><p>这个只是随便想出来的。增加@功能可以加强用户间的互动。同时有特殊诉求也可以直接@系统管理员，拉近网站管理者与用户间的距离。</p><ul><li>邮件无人回复</li></ul><p>大概两三周前，给简书邮箱<a href="mailto:contact@jianshu.io" target="_blank" rel="noopener">contact@jianshu.io</a>发了封邮件，询问关于简书是否开放API的问题，至今无人回复。我很理解国内工作忙，不查看邮件的行业习惯。但写在联系方式里的联系方式无法联系，还是很令人失望的。</p><ul><li>写博客时自动保存太频繁</li></ul><p>这是刚刚写此文时的感受。右上角频繁显示保存中，已保存的提示，总以为有什么重要信息似的。这样频繁的保存是好的，可以防止突发事件导致文件丢失。但至少可以做得人性化一些，比如静默提醒，或者使用小图标的显示。</p><ul><li>发布文章按钮不明显</li></ul><p>好吧这个是凑数的。虽然发过一篇文章，但第二次发文，我还是要找一下发布键。</p><blockquote><p><strong>后记</strong>：<br>从近一个月使用简书的体验来看，非常喜爱，各方面都给人以美感。写这么些建议完全是希望简书越办越好，真没有吹毛求疵，以及鸡蛋里挑骨头啊……（好吧，其实大部分还是就我个人感受而言 :P）但如果能修复以上问题，至少对于我来说会感觉简书用起来更舒适的。</p></blockquote>]]></content>
    
    <summary type="html">
    
      Suggestion on Jianshu website.
    
    </summary>
    
      <category term="评说" scheme="https://cn.abnerchou.me/categories/%E8%AF%84%E8%AF%B4/"/>
    
    
      <category term="简书" scheme="https://cn.abnerchou.me/tags/%E7%AE%80%E4%B9%A6/"/>
    
      <category term="建议" scheme="https://cn.abnerchou.me/tags/%E5%BB%BA%E8%AE%AE/"/>
    
  </entry>
  
  <entry>
    <title>病疾理心的员序程</title>
    <link href="https://cn.abnerchou.me/blog/9b288bea/"/>
    <id>https://cn.abnerchou.me/blog/9b288bea/</id>
    <published>2014-02-17T03:26:00.000Z</published>
    <updated>2019-11-09T19:24:13.851Z</updated>
    
    <content type="html"><![CDATA[<p>题目请倒过来读。</p><p>如果读过原文的，一看就明了此文的用意。是针对<a href="http://www.yinwang.org/" target="_blank" rel="noopener">王银</a>的《程序员的心理疾病》的一篇反文。</p><p>也不能说是错，但作者夸张得以偏盖全，以点盖面，一棒子拍倒一片程序员。程序员真的如此不堪？这么多的缺点，甚至都不配称之为工程师？</p><p>总结一下，原文主要说了IT行业以下几个缺点：<br><a id="more"></a></p><ul><li>自负自大</li><li>崇拜权威</li><li>窝里斗</li></ul><p>作者的整片文章就已经很好的阐述了程序员自负自大的这个理念。没有贬低作者的意思，他在计算机程序语言方面的成就是有目共睹的。但如下的评述是自信，自负，还是自大呢？至少没有看出一点谦虚的成分 （注：<strong>PySonar</strong>是作者在Google Intern时候所作）：</p><blockquote><p>“然而如果你知道 PySonar 的技术含量就会明白，这样的东西需要水平高过 Python 的创造者 Guido van Rossum 很多的人才能造出来。”</p></blockquote><p>同时自负自大的另一个表现就是嘲笑新人，或者对新人不热心。作者举了两个自己无法容忍的例子：一是问问题丢给一堆文档；二是当面演示用Google搜索答案。作者认为这相当无理。但我认为无何不妥之处。<a href="http://sachachua.com/blog/2014/02/tips-self-directed-learning-books-deliberate-practice/" target="_blank" rel="noopener">Sacha Chua</a>在其关于学习的博客中有提到，当学习到达一定阶段，我们不会有教科书或者专门的老师来指导教学，能遇到个Mentor就是人生的大幸了。作者希望自己的每个问题都受到他人的重视，难免有些强人所难。况且有时候我们自身对问题的理解，和别人对问题的看法是有出入的。</p><p>还有有一句话说得好，就是“你怎么看自己，别人就怎么看你”。最简单的一个例子就是早起照镜子，发现自己头上有根呆毛，但由于赶时间匆忙出门，路上就总感觉别人投来异样的目光，午餐时邻桌传来的笑声也觉得是嘲笑，其实殊不知呆毛早就顺应地心引力垂了下来。这种心理现象比比皆是，往往也是不开心的源泉。</p><p>说计算机就算当机也无所谓。看看当今金融领域多少是利用计算机在完成交易，飞机的自动导航，汽车的防抱死系统、防侧翻系统，等等。软件可能无法直接伤人，但就如“吾虽不杀伯仁，伯仁因我而死”，不可避免要影响到人们的生活。</p><p>作者另一个论点就是窝里斗，但从其贬低软件工程师的思路来看，窝里斗的现象可见严重。主要论据是就算系统死机，也不会危及他人。这种说法有失偏颇。别且因此说计算机不是科学，也是完全没有依据的。目前学术界也一直在争论。从各大高校对于计算机学科所属院系就可以看出这种分歧。</p><blockquote><p><a href="http://en.wikipedia.org/wiki/Science" target="_blank" rel="noopener">Science</a> (from Latin scientia, meaning “knowledge”) is a systematic enterprise that builds and organizes knowledge in the form of testable explanations and predictions about the universe.</p></blockquote><p>从以上科学的定义可以看出， 可重复的实验和可预期的结果是关键。比如绘画，对于一副画的好坏很难用一定标尺来衡量，再如文学，一千个人心中有一千个哈姆雷特。但计算机呢，总不能敲下去一个回车键，有一千种反应的可能吧；而且对于程序的好坏也有系统的衡量标准。现阶段的这种对于计算机到底属于哪类的争论，完全是由于计算机领域太年轻，60年的发展还不足以让大家统一到一起。单从现今技术的走向来看，在10多年前，谁也不会想到网络会有现在的力量。云计算，云存储，掀起了网络脚本语言的热潮。JavaScript竟然一跃成为Web开发的主流语言。再看微软刚起步的上世纪80年代，最主流的语言的C语言，它的胞弟C++才刚出生不久，而现在确实Java横扫的所有平台。</p><p>无法给计算机领域一个确切的定义，也正是由于其变化太快。在单机领域，技术、理论等都已稳定与成熟，但网络方面、人工智能等领域还有好多亟待解决的问题。这就造成了有部分已经成为科学，但另一部分却还是在工程领域。个人还是偏向于计算机是属科学的。</p><p>对于软件领域的盲目崇拜权威，我认为这在所有领域都存在，不光是IT业。在此就不复述了。</p><p><em>本文是就自己对作者文章中一些观点的看法，作为存档记录之用。</em></p>]]></content>
    
    <summary type="html">
    
      A review on Wang Yin&#39;s blog.
    
    </summary>
    
      <category term="评说" scheme="https://cn.abnerchou.me/categories/%E8%AF%84%E8%AF%B4/"/>
    
    
      <category term="心理" scheme="https://cn.abnerchou.me/tags/%E5%BF%83%E7%90%86/"/>
    
      <category term="王垠" scheme="https://cn.abnerchou.me/tags/%E7%8E%8B%E5%9E%A0/"/>
    
      <category term="程序员的心理疾病" scheme="https://cn.abnerchou.me/tags/%E7%A8%8B%E5%BA%8F%E5%91%98%E7%9A%84%E5%BF%83%E7%90%86%E7%96%BE%E7%97%85/"/>
    
      <category term="程序员" scheme="https://cn.abnerchou.me/tags/%E7%A8%8B%E5%BA%8F%E5%91%98/"/>
    
  </entry>
  
  <entry>
    <title>简书不简</title>
    <link href="https://cn.abnerchou.me/blog/4b0eefbd/"/>
    <id>https://cn.abnerchou.me/blog/4b0eefbd/</id>
    <published>2014-02-04T17:24:00.000Z</published>
    <updated>2019-11-09T19:24:13.851Z</updated>
    
    <content type="html"><![CDATA[<p>简书是什么？是<a href="http://www.tumblr.com" target="_blank" rel="noopener">Tumblr</a>么？这是我听到简书这两个字时的第一反应。（事实也证明确有渊源）</p><p>怎么发现简书的呢？这要从最近的琐事说起了。前几日突然想起落满灰尘的RSS，打开Google Reader，竟被告知已关闭。而且连备份也没有，不由得郁闷。于是又在Mac上鼓捣了一下午的Feed Reader。功夫不负有心人，终于把以前订阅的所有RSS都找到了（总共也没几个）。</p><a id="more"></a><p>但是怎么发现简书的呢？通过RSS读到了关于一个叫<a href="http://news.dbanotes.net/" target="_blank" rel="noopener">Startup News</a>的网站，和国外的<a href="https://news.ycombinator.com/" target="_blank" rel="noopener">Hacker News</a>类似。于是激动得就订阅了。然后就看到简叔的关于微信的文章。进来后就被吸引得无法自拔。然后就注册了简书号。然后就觉得应该写点什么。然后……</p><p>简书给我的第一印象就是干净整洁，要不是其中的中文文章，我一定会以为她是个国外的网站。没有国内众多网站那种浮躁之气，恨不得把广告从屏幕里塞出来。看了简叔的一些文章，其中提到了苹果美学。这也难怪本站在Retina的Mac上是那么的完美无瑕，色调搭配，模块布局，都给人眼前一亮的感觉。</p><p>虽然不是个资深的博客，但也在国内各大博客站都有帐号，也算是个看客。最早是网易博客，其后是杭州一所小学办的博客（都不知道自己当初是怎么找到的），再其后是一个私人博客（办了一两年），再后来是新浪博客（这个用的时间最长），在后来是百度博客，以及众多只有帐号从不发文章的博客站。但是遇见简书后，我觉得这才是我多年一直在寻找的博客站。</p><p>简书之简深谙设计之美，在无数行业都适用，但都很难做到的一句话：“Keep it Simple, Stupid!” （<a href="http://en.wikipedia.org/wiki/KISS_principle" target="_blank" rel="noopener">KISS</a>）这就让人很奇怪，不就是简单么，为什么就这么难？</p><p>大家可以想想，在iPhone出来之前，最想要的手机是什么？在Mac出来之前，人们是怎么看待多任务的？答案是iPhone和Mac都不是人们所想要的。iPhone和Mac之所以推出后大获欢迎，是因为抓住人们的真正需求，或者说是发现了人们的需求。</p><p>最常用的一个例子就是：福特汽车的创始人亨利福特说，在汽车发明以前如果你问消费者想要什么，他们会说想要跑得更快的马。用户其实不在乎是不是马，而是要跑得更快而已。虽然说这些信息都隐含在人们的欲望当中，但要发现它们却实属不易。</p><p>从国内第一个博客站开始，到现在仍然存活的博客站，每个首页都几乎是千篇一律：广告+闪来闪去的图片+密密麻麻的题目。在现在Push信息轻松获取的时代，这种Pull信息的模式必然让用户敬而远之。无数的模块，新加功能随着一次次补丁越添越多。广告也随着用户数的增加变得无孔不入。作为用户和网站管理员都不曾想过去简化博客。</p><p>眼看着Web 1.0的博客在遇到Web 2.0的SNS，<a href="https://twitter.com/" target="_blank" rel="noopener">twiter</a>节节败退时，<a href="http://www.tumblr.com" target="_blank" rel="noopener">Tumblr</a>横空出世。通过简单易用的多媒体分享功能，将博客也升级入了Web 2.0时代。</p><p>再看看国内的山寨Tumblr：新浪博客Qing(已关闭)，推他网（已关闭），<a href="http://www.diandian.com/" target="_blank" rel="noopener">点点网</a>。俨然已经成为一个图片分享中心。图片确也赏心悦目，但图片最大的缺点就是无法搜索，锁定关键词以及查找相关内容。</p><p>简书专注于文字，而且支持Markdown书写模式（目前最简单快捷），让人只需思考如何写作，而不用理会博客模板设计等与写作无关的内容。这样的简化是否成功，目前不好下定论。但就个人而言，是非常看好此产品，也会将其介绍给身边的朋友。</p><p>如果以后能添加图片上传功能将更锦上添花。当然再有视频功能就更好了。 ^_^ 希望无视我的诉求，网站应该按照自己的理念来发展，有时用户的想法并非正确。就如<a href="https://www.facebook.com/" target="_blank" rel="noopener">Facebook</a>在最初推出推送好友状态的功能时（这是现在SNS必要功能），收到上千封用户邮件声称自己感到受偷窥。Facebook甚至为此召开全体员工会议，最后决定是让用户适应一段。最后这一改动奠定了SNS的基础，更助Facebook成为全球第一社交网站。这就是Facebook “先做，再道歉”的产品理念。</p><p>简书并非一个简化了的博客平台，而是一个创新理念，打破传统，用户友好，蕴含文化的产品。</p><p>简书不简，简在其表，内涵其书！</p><p>PS：</p><ol><li>本文属胡言乱语之作；</li><li>看到不少人都在相应每日千文，故此开篇也写千字。但要天天如此，恐难坚持。</li></ol>]]></content>
    
    <summary type="html">
    
      Blog in a markdown way on Jianshu.
    
    </summary>
    
      <category term="评说" scheme="https://cn.abnerchou.me/categories/%E8%AF%84%E8%AF%B4/"/>
    
    
      <category term="简书" scheme="https://cn.abnerchou.me/tags/%E7%AE%80%E4%B9%A6/"/>
    
      <category term="博客" scheme="https://cn.abnerchou.me/tags/%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
  <entry>
    <title>世界智力精英运动会日本围棋选手介绍</title>
    <link href="https://cn.abnerchou.me/blog/d15b43c9/"/>
    <id>https://cn.abnerchou.me/blog/d15b43c9/</id>
    <published>2013-12-09T02:57:32.000Z</published>
    <updated>2019-11-09T19:24:13.851Z</updated>
    
    <content type="html"><![CDATA[<img src="/img/qishou.jpg" title="世界智力精英运动会日本围棋选手介绍"><p>来自中国、欧洲、日本、韩国，以及北美的30位棋手（18位男棋手，12位女棋手）齐聚北京，角逐今年世界精英运动会的奖金。比赛将于十二月12日至18日举行。</p><p>『译自：American Go E-Journal』作者：Michael Redmond 9P （世界第一位欧美职业九段）</p><p>总体来说， 今年日本决定给青年棋手更多的机会。但可惜的是，后起之秀的Murakawa Daisuke 和 Ichiriki Ryo却不在名单之上，我（作者）还是很期待看到他们的。Murakawa是日本棋圣战B组的冠军。Ichiriki是16岁的棋手，两星期前在名人循环赛中负于Ko Iso，这是他在循环赛中输掉的唯一一局。可能由于时间安排等问题，这两位都无法参加本次大赛。</p><p>Rina Fujisawa 2P: （中）出生于1998，目前仅11岁零6个月。她是日本最年轻的职业选手，打破了赵治勋的11岁零9个月。她于2010年四月成为职业选手，并于同年六月击败职业九段而成为热门话题。Rina的爷爷是藤泽秀行，父亲是Fujisawa Kazunari 8P。因此她的棋风细腻且富于攻击性。</p><p>Akihiro Fujita 4P: （左一）生于1991，2006年成为职业棋手。获得2013年第38届日本新人王冠军，并于2010年险获本因坊循环赛的入场券，决赛负于了山下敬吾九段。他被认为是日本最有前途的年轻棋手之一。</p><p>Tomoya Hirata 3P: （右二）生于1994，2009年成为职业选手。棋风富于攻击性。我曾和他下过一盘，却由于中盘失误而告负。</p><p>Kazushi Tsuruta 2P: （左二） 生于1995， 2010年成为职业。 2011曾进入本因坊预选赛。</p><p>Mika Yoshida 8P: （右一） 生于1971， 1986年成为职业。在1992-2005年间获得多项女子头衔。棋风均衡。</p><p>楼主按：怎么年轻人棋风都很攻击性呢？而且有萌妹纸的比赛一定要关注下～</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;img src=&quot;/img/qishou.jpg&quot; title=&quot;世界智力精英运动会日本围棋选手介绍&quot;&gt;
&lt;p&gt;来自中国、欧洲、日本、韩国，以及北美的30位棋手（18位男棋手，12位女棋手）齐聚北京，角逐今年世界精英运动会的奖金。比赛将于十二月12日至18日举行。&lt;/p&gt;
&lt;p
      
    
    </summary>
    
      <category term="译文" scheme="https://cn.abnerchou.me/categories/%E8%AF%91%E6%96%87/"/>
    
    
      <category term="围棋新人吧" scheme="https://cn.abnerchou.me/tags/%E5%9B%B4%E6%A3%8B%E6%96%B0%E4%BA%BA%E5%90%A7/"/>
    
      <category term="世界智力精英运动会" scheme="https://cn.abnerchou.me/tags/%E4%B8%96%E7%95%8C%E6%99%BA%E5%8A%9B%E7%B2%BE%E8%8B%B1%E8%BF%90%E5%8A%A8%E4%BC%9A/"/>
    
  </entry>
  
</feed>
